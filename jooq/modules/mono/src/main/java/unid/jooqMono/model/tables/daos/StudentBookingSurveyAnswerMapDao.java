/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentBookingSurveyAnswerMapTable;
import unid.jooqMono.model.tables.pojos.StudentBookingSurveyAnswerMapPojo;
import unid.jooqMono.model.tables.records.StudentBookingSurveyAnswerMapRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentBookingSurveyAnswerMapDao extends DAOImpl<StudentBookingSurveyAnswerMapRecord, StudentBookingSurveyAnswerMapPojo, UUID> {

    /**
     * Create a new StudentBookingSurveyAnswerMapDao without any configuration
     */
    public StudentBookingSurveyAnswerMapDao() {
        super(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP, StudentBookingSurveyAnswerMapPojo.class);
    }

    /**
     * Create a new StudentBookingSurveyAnswerMapDao with an attached
     * configuration
     */
    public StudentBookingSurveyAnswerMapDao(Configuration configuration) {
        super(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP, StudentBookingSurveyAnswerMapPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentBookingSurveyAnswerMapPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchById(UUID... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentBookingSurveyAnswerMapPojo fetchOneById(UUID value) {
        return fetchOne(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.ID, value);
    }

    /**
     * Fetch records that have <code>student_booking_survey_map_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfStudentBookingSurveyMapId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_BOOKING_SURVEY_MAP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_booking_survey_map_id IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByStudentBookingSurveyMapId(UUID... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_BOOKING_SURVEY_MAP_ID, values);
    }

    /**
     * Fetch records that have <code>student_session_survey_question_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfStudentSessionSurveyQuestionId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_QUESTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_session_survey_question_id IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByStudentSessionSurveyQuestionId(UUID... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_QUESTION_ID, values);
    }

    /**
     * Fetch records that have <code>student_session_survey_answer_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfStudentSessionSurveyAnswerId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_ANSWER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_session_survey_answer_id IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByStudentSessionSurveyAnswerId(UUID... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_ANSWER_ID, values);
    }

    /**
     * Fetch records that have <code>student_session_survey_answer_order BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfStudentSessionSurveyAnswerOrder(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_ANSWER_ORDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_session_survey_answer_order IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByStudentSessionSurveyAnswerOrder(Integer... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_ANSWER_ORDER, values);
    }

    /**
     * Fetch records that have <code>student_session_survey_answer_input BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfStudentSessionSurveyAnswerInput(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_ANSWER_INPUT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_session_survey_answer_input IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByStudentSessionSurveyAnswerInput(String... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.STUDENT_SESSION_SURVEY_ANSWER_INPUT, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByCreatedBy(String... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentBookingSurveyAnswerMapPojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentBookingSurveyAnswerMapTable.STUDENT_BOOKING_SURVEY_ANSWER_MAP.UPDATED_BY, values);
    }
}
