/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.StudentMilestoneQuestionnaireTable;
import unid.jooqMono.model.tables.pojos.StudentMilestoneQuestionnairePojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class StudentMilestoneQuestionnaireRecord extends UpdatableRecordImpl<StudentMilestoneQuestionnaireRecord> implements Record4<UUID, UUID, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.student_milestone_questionnaire.id</code>.
     */
    public StudentMilestoneQuestionnaireRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.student_milestone_questionnaire.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.student_milestone_questionnaire.question_i18n_id</code>.
     */
    public StudentMilestoneQuestionnaireRecord setQuestionI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_milestone_questionnaire.question_i18n_id</code>.
     */
    @Nullable
    public UUID getQuestionI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.student_milestone_questionnaire.sort_id</code>.
     */
    public StudentMilestoneQuestionnaireRecord setSortId(@Nullable Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.student_milestone_questionnaire.sort_id</code>.
     */
    @Nullable
    public Integer getSortId() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>public.student_milestone_questionnaire.single_choice</code>.
     */
    public StudentMilestoneQuestionnaireRecord setSingleChoice(@Nullable Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_milestone_questionnaire.single_choice</code>.
     */
    @Nullable
    public Boolean getSingleChoice() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<UUID, UUID, Integer, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<UUID, UUID, Integer, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE.QUESTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field3() {
        return StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE.SORT_ID;
    }

    @Override
    @Nonnull
    public Field<Boolean> field4() {
        return StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE.SINGLE_CHOICE;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getQuestionI18nId();
    }

    @Override
    @Nullable
    public Integer component3() {
        return getSortId();
    }

    @Override
    @Nullable
    public Boolean component4() {
        return getSingleChoice();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getQuestionI18nId();
    }

    @Override
    @Nullable
    public Integer value3() {
        return getSortId();
    }

    @Override
    @Nullable
    public Boolean value4() {
        return getSingleChoice();
    }

    @Override
    @Nonnull
    public StudentMilestoneQuestionnaireRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentMilestoneQuestionnaireRecord value2(@Nullable UUID value) {
        setQuestionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentMilestoneQuestionnaireRecord value3(@Nullable Integer value) {
        setSortId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentMilestoneQuestionnaireRecord value4(@Nullable Boolean value) {
        setSingleChoice(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentMilestoneQuestionnaireRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable Integer value3, @Nullable Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentMilestoneQuestionnaireRecord
     */
    public StudentMilestoneQuestionnaireRecord() {
        super(StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE);
    }

    /**
     * Create a detached, initialised StudentMilestoneQuestionnaireRecord
     */
    @ConstructorProperties({ "id", "questionI18nId", "sortId", "singleChoice" })
    public StudentMilestoneQuestionnaireRecord(@Nonnull UUID id, @Nullable UUID questionI18nId, @Nullable Integer sortId, @Nullable Boolean singleChoice) {
        super(StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE);

        setId(id);
        setQuestionI18nId(questionI18nId);
        setSortId(sortId);
        setSingleChoice(singleChoice);
    }

    /**
     * Create a detached, initialised StudentMilestoneQuestionnaireRecord
     */
    public StudentMilestoneQuestionnaireRecord(StudentMilestoneQuestionnairePojo value) {
        super(StudentMilestoneQuestionnaireTable.STUDENT_MILESTONE_QUESTIONNAIRE);

        if (value != null) {
            setId(value.getId());
            setQuestionI18nId(value.getQuestionI18nId());
            setSortId(value.getSortId());
            setSingleChoice(value.getSingleChoice());
        }
    }
}
