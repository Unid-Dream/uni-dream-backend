/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables;


import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import unid.jooqMono.model.Public;
import unid.jooqMono.model.tables.records._AuditLogStudentUploadedSupervisorReviewRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _AuditLogStudentUploadedSupervisorReviewTable extends TableImpl<_AuditLogStudentUploadedSupervisorReviewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>public._audit_log_student_uploaded_supervisor_review</code>
     */
    public static final _AuditLogStudentUploadedSupervisorReviewTable _AUDIT_LOG_STUDENT_UPLOADED_SUPERVISOR_REVIEW = new _AuditLogStudentUploadedSupervisorReviewTable();

    /**
     * The class holding records for this type
     */
    @Override
    @Nonnull
    public Class<_AuditLogStudentUploadedSupervisorReviewRecord> getRecordType() {
        return _AuditLogStudentUploadedSupervisorReviewRecord.class;
    }

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.audit_seq</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, Long> AUDIT_SEQ = createField(DSL.name("audit_seq"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.audit_createdon</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, OffsetDateTime> AUDIT_CREATEDON = createField(DSL.name("audit_createdon"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.audit_createdby</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> AUDIT_CREATEDBY = createField(DSL.name("audit_createdby"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.audit_operation</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> AUDIT_OPERATION = createField(DSL.name("audit_operation"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.audit_type</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> AUDIT_TYPE = createField(DSL.name("audit_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.id</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.supervisor_score</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, Integer> SUPERVISOR_SCORE = createField(DSL.name("supervisor_score"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.supervisor_commented_strength</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> SUPERVISOR_COMMENTED_STRENGTH = createField(DSL.name("supervisor_commented_strength"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.supervisor_commented_weakness</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> SUPERVISOR_COMMENTED_WEAKNESS = createField(DSL.name("supervisor_commented_weakness"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.supervisor_commented_improvement</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> SUPERVISOR_COMMENTED_IMPROVEMENT = createField(DSL.name("supervisor_commented_improvement"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.created_on</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, OffsetDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.created_by</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.updated_on</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, OffsetDateTime> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.updated_by</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_uploaded_supervisor_review.supervisor_commented_wrap_up</code>.
     */
    public final TableField<_AuditLogStudentUploadedSupervisorReviewRecord, String> SUPERVISOR_COMMENTED_WRAP_UP = createField(DSL.name("supervisor_commented_wrap_up"), SQLDataType.CLOB, this, "");

    private _AuditLogStudentUploadedSupervisorReviewTable(Name alias, Table<_AuditLogStudentUploadedSupervisorReviewRecord> aliased) {
        this(alias, aliased, null);
    }

    private _AuditLogStudentUploadedSupervisorReviewTable(Name alias, Table<_AuditLogStudentUploadedSupervisorReviewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>public._audit_log_student_uploaded_supervisor_review</code> table
     * reference
     */
    public _AuditLogStudentUploadedSupervisorReviewTable(String alias) {
        this(DSL.name(alias), _AUDIT_LOG_STUDENT_UPLOADED_SUPERVISOR_REVIEW);
    }

    /**
     * Create an aliased
     * <code>public._audit_log_student_uploaded_supervisor_review</code> table
     * reference
     */
    public _AuditLogStudentUploadedSupervisorReviewTable(Name alias) {
        this(alias, _AUDIT_LOG_STUDENT_UPLOADED_SUPERVISOR_REVIEW);
    }

    /**
     * Create a
     * <code>public._audit_log_student_uploaded_supervisor_review</code> table
     * reference
     */
    public _AuditLogStudentUploadedSupervisorReviewTable() {
        this(DSL.name("_audit_log_student_uploaded_supervisor_review"), null);
    }

    public <O extends Record> _AuditLogStudentUploadedSupervisorReviewTable(Table<O> child, ForeignKey<O, _AuditLogStudentUploadedSupervisorReviewRecord> key) {
        super(child, key, _AUDIT_LOG_STUDENT_UPLOADED_SUPERVISOR_REVIEW);
    }

    @Override
    @Nonnull
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    @Nonnull
    public Identity<_AuditLogStudentUploadedSupervisorReviewRecord, Long> getIdentity() {
        return (Identity<_AuditLogStudentUploadedSupervisorReviewRecord, Long>) super.getIdentity();
    }

    @Override
    @Nonnull
    public _AuditLogStudentUploadedSupervisorReviewTable as(String alias) {
        return new _AuditLogStudentUploadedSupervisorReviewTable(DSL.name(alias), this);
    }

    @Override
    @Nonnull
    public _AuditLogStudentUploadedSupervisorReviewTable as(Name alias) {
        return new _AuditLogStudentUploadedSupervisorReviewTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    @Nonnull
    public _AuditLogStudentUploadedSupervisorReviewTable rename(String name) {
        return new _AuditLogStudentUploadedSupervisorReviewTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    @Nonnull
    public _AuditLogStudentUploadedSupervisorReviewTable rename(Name name) {
        return new _AuditLogStudentUploadedSupervisorReviewTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row15<Long, OffsetDateTime, String, String, String, UUID, Integer, String, String, String, OffsetDateTime, String, OffsetDateTime, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
