/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.LocalDate;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.enums.EventStatusEnum;
import unid.jooqMono.model.tables.EventExtensionTable;
import unid.jooqMono.model.tables.pojos.EventExtensionPojo;
import unid.jooqMono.model.tables.records.EventExtensionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventExtensionDao extends DAOImpl<EventExtensionRecord, EventExtensionPojo, UUID> {

    /**
     * Create a new EventExtensionDao without any configuration
     */
    public EventExtensionDao() {
        super(EventExtensionTable.EVENT_EXTENSION, EventExtensionPojo.class);
    }

    /**
     * Create a new EventExtensionDao with an attached configuration
     */
    public EventExtensionDao(Configuration configuration) {
        super(EventExtensionTable.EVENT_EXTENSION, EventExtensionPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(EventExtensionPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchById(UUID... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public EventExtensionPojo fetchOneById(UUID value) {
        return fetchOne(EventExtensionTable.EVENT_EXTENSION.ID, value);
    }

    /**
     * Fetch records that have <code>event_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfEventId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.EVENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>event_id IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchByEventId(UUID... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.EVENT_ID, values);
    }

    /**
     * Fetch records that have <code>educator_profile_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfEducatorProfileId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.EDUCATOR_PROFILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>educator_profile_id IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchByEducatorProfileId(UUID... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.EDUCATOR_PROFILE_ID, values);
    }

    /**
     * Fetch records that have <code>agenda BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfAgenda(String lowerInclusive, String upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.AGENDA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>agenda IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchByAgenda(String... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.AGENDA, values);
    }

    /**
     * Fetch records that have <code>event_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfEventStatus(EventStatusEnum lowerInclusive, EventStatusEnum upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.EVENT_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>event_status IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchByEventStatus(EventStatusEnum... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.EVENT_STATUS, values);
    }

    /**
     * Fetch records that have <code>event_dates BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfEventDates(LocalDate[] lowerInclusive, LocalDate[] upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.EVENT_DATES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>event_dates IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchByEventDates(LocalDate[]... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.EVENT_DATES, values);
    }

    /**
     * Fetch records that have <code>agenda_i18n_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchRangeOfAgendaI18nId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(EventExtensionTable.EVENT_EXTENSION.AGENDA_I18N_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>agenda_i18n_id IN (values)</code>
     */
    @Nonnull
    public List<EventExtensionPojo> fetchByAgendaI18nId(UUID... values) {
        return fetch(EventExtensionTable.EVENT_EXTENSION.AGENDA_I18N_ID, values);
    }
}
