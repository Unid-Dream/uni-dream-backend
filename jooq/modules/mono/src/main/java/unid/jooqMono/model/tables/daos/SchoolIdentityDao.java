/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.SchoolIdentityTable;
import unid.jooqMono.model.tables.pojos.SchoolIdentityPojo;
import unid.jooqMono.model.tables.records.SchoolIdentityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolIdentityDao extends DAOImpl<SchoolIdentityRecord, SchoolIdentityPojo, UUID> {

    /**
     * Create a new SchoolIdentityDao without any configuration
     */
    public SchoolIdentityDao() {
        super(SchoolIdentityTable.SCHOOL_IDENTITY, SchoolIdentityPojo.class);
    }

    /**
     * Create a new SchoolIdentityDao with an attached configuration
     */
    public SchoolIdentityDao(Configuration configuration) {
        super(SchoolIdentityTable.SCHOOL_IDENTITY, SchoolIdentityPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(SchoolIdentityPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SchoolIdentityTable.SCHOOL_IDENTITY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchById(UUID... values) {
        return fetch(SchoolIdentityTable.SCHOOL_IDENTITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public SchoolIdentityPojo fetchOneById(UUID value) {
        return fetchOne(SchoolIdentityTable.SCHOOL_IDENTITY.ID, value);
    }

    /**
     * Fetch records that have <code>name_i18n_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchRangeOfNameI18nId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SchoolIdentityTable.SCHOOL_IDENTITY.NAME_I18N_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name_i18n_id IN (values)</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchByNameI18nId(UUID... values) {
        return fetch(SchoolIdentityTable.SCHOOL_IDENTITY.NAME_I18N_ID, values);
    }

    /**
     * Fetch a unique record that has <code>name_i18n_id = value</code>
     */
    @Nullable
    public SchoolIdentityPojo fetchOneByNameI18nId(UUID value) {
        return fetchOne(SchoolIdentityTable.SCHOOL_IDENTITY.NAME_I18N_ID, value);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(SchoolIdentityTable.SCHOOL_IDENTITY.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(SchoolIdentityTable.SCHOOL_IDENTITY.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(SchoolIdentityTable.SCHOOL_IDENTITY.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchByCreatedBy(String... values) {
        return fetch(SchoolIdentityTable.SCHOOL_IDENTITY.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(SchoolIdentityTable.SCHOOL_IDENTITY.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(SchoolIdentityTable.SCHOOL_IDENTITY.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(SchoolIdentityTable.SCHOOL_IDENTITY.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<SchoolIdentityPojo> fetchByUpdatedBy(String... values) {
        return fetch(SchoolIdentityTable.SCHOOL_IDENTITY.UPDATED_BY, values);
    }
}
