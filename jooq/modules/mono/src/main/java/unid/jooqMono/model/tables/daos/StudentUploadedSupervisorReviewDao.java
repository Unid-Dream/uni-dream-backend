/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentUploadedSupervisorReviewTable;
import unid.jooqMono.model.tables.pojos.StudentUploadedSupervisorReviewPojo;
import unid.jooqMono.model.tables.records.StudentUploadedSupervisorReviewRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentUploadedSupervisorReviewDao extends DAOImpl<StudentUploadedSupervisorReviewRecord, StudentUploadedSupervisorReviewPojo, UUID> {

    /**
     * Create a new StudentUploadedSupervisorReviewDao without any configuration
     */
    public StudentUploadedSupervisorReviewDao() {
        super(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW, StudentUploadedSupervisorReviewPojo.class);
    }

    /**
     * Create a new StudentUploadedSupervisorReviewDao with an attached
     * configuration
     */
    public StudentUploadedSupervisorReviewDao(Configuration configuration) {
        super(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW, StudentUploadedSupervisorReviewPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentUploadedSupervisorReviewPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchById(UUID... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentUploadedSupervisorReviewPojo fetchOneById(UUID value) {
        return fetchOne(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.ID, value);
    }

    /**
     * Fetch records that have <code>supervisor_score BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfSupervisorScore(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supervisor_score IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchBySupervisorScore(Integer... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_SCORE, values);
    }

    /**
     * Fetch records that have <code>supervisor_commented_strength BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfSupervisorCommentedStrength(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_STRENGTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supervisor_commented_strength IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchBySupervisorCommentedStrength(String... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_STRENGTH, values);
    }

    /**
     * Fetch records that have <code>supervisor_commented_weakness BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfSupervisorCommentedWeakness(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_WEAKNESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supervisor_commented_weakness IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchBySupervisorCommentedWeakness(String... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_WEAKNESS, values);
    }

    /**
     * Fetch records that have <code>supervisor_commented_improvement BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfSupervisorCommentedImprovement(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_IMPROVEMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supervisor_commented_improvement IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchBySupervisorCommentedImprovement(String... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_IMPROVEMENT, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchByCreatedBy(String... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>supervisor_commented_wrap_up BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchRangeOfSupervisorCommentedWrapUp(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_WRAP_UP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supervisor_commented_wrap_up IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentUploadedSupervisorReviewPojo> fetchBySupervisorCommentedWrapUp(String... values) {
        return fetch(StudentUploadedSupervisorReviewTable.STUDENT_UPLOADED_SUPERVISOR_REVIEW.SUPERVISOR_COMMENTED_WRAP_UP, values);
    }
}
