/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.enums.SchoolLevelEnum;
import unid.jooqMono.model.tables.EducationLevelTable;
import unid.jooqMono.model.tables.pojos.EducationLevelPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class EducationLevelRecord extends UpdatableRecordImpl<EducationLevelRecord> implements Record8<UUID, String, SchoolLevelEnum, UUID, OffsetDateTime, String, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.education_level.id</code>.
     */
    public EducationLevelRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.education_level.grade</code>.
     */
    public EducationLevelRecord setGrade(@Nullable String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.grade</code>.
     */
    @Nullable
    public String getGrade() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.education_level.school_level</code>.
     */
    public EducationLevelRecord setSchoolLevel(@Nullable SchoolLevelEnum value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.school_level</code>.
     */
    @Nullable
    public SchoolLevelEnum getSchoolLevel() {
        return (SchoolLevelEnum) get(2);
    }

    /**
     * Setter for <code>public.education_level.description_i18n_id</code>.
     */
    public EducationLevelRecord setDescriptionI18nId(@Nullable UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.description_i18n_id</code>.
     */
    @Nullable
    public UUID getDescriptionI18nId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.education_level.created_on</code>.
     */
    public EducationLevelRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.education_level.created_by</code>.
     */
    public EducationLevelRecord setCreatedBy(@Nullable String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.education_level.updated_on</code>.
     */
    public EducationLevelRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.education_level.updated_by</code>.
     */
    public EducationLevelRecord setUpdatedBy(@Nullable String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.education_level.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row8<UUID, String, SchoolLevelEnum, UUID, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row8<UUID, String, SchoolLevelEnum, UUID, OffsetDateTime, String, OffsetDateTime, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return EducationLevelTable.EDUCATION_LEVEL.ID;
    }

    @Override
    @Nonnull
    public Field<String> field2() {
        return EducationLevelTable.EDUCATION_LEVEL.GRADE;
    }

    @Override
    @Nonnull
    public Field<SchoolLevelEnum> field3() {
        return EducationLevelTable.EDUCATION_LEVEL.SCHOOL_LEVEL;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return EducationLevelTable.EDUCATION_LEVEL.DESCRIPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field5() {
        return EducationLevelTable.EDUCATION_LEVEL.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field6() {
        return EducationLevelTable.EDUCATION_LEVEL.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field7() {
        return EducationLevelTable.EDUCATION_LEVEL.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field8() {
        return EducationLevelTable.EDUCATION_LEVEL.UPDATED_BY;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public String component2() {
        return getGrade();
    }

    @Override
    @Nullable
    public SchoolLevelEnum component3() {
        return getSchoolLevel();
    }

    @Override
    @Nullable
    public UUID component4() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public OffsetDateTime component5() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component6() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component7() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component8() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public String value2() {
        return getGrade();
    }

    @Override
    @Nullable
    public SchoolLevelEnum value3() {
        return getSchoolLevel();
    }

    @Override
    @Nullable
    public UUID value4() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public OffsetDateTime value5() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value6() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value7() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value8() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public EducationLevelRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value2(@Nullable String value) {
        setGrade(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value3(@Nullable SchoolLevelEnum value) {
        setSchoolLevel(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value4(@Nullable UUID value) {
        setDescriptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value5(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value6(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value7(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord value8(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public EducationLevelRecord values(@Nonnull UUID value1, @Nullable String value2, @Nullable SchoolLevelEnum value3, @Nullable UUID value4, @Nullable OffsetDateTime value5, @Nullable String value6, @Nullable OffsetDateTime value7, @Nullable String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EducationLevelRecord
     */
    public EducationLevelRecord() {
        super(EducationLevelTable.EDUCATION_LEVEL);
    }

    /**
     * Create a detached, initialised EducationLevelRecord
     */
    @ConstructorProperties({ "id", "grade", "schoolLevel", "descriptionI18nId", "createdOn", "createdBy", "updatedOn", "updatedBy" })
    public EducationLevelRecord(@Nonnull UUID id, @Nullable String grade, @Nullable SchoolLevelEnum schoolLevel, @Nullable UUID descriptionI18nId, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy) {
        super(EducationLevelTable.EDUCATION_LEVEL);

        setId(id);
        setGrade(grade);
        setSchoolLevel(schoolLevel);
        setDescriptionI18nId(descriptionI18nId);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised EducationLevelRecord
     */
    public EducationLevelRecord(EducationLevelPojo value) {
        super(EducationLevelTable.EDUCATION_LEVEL);

        if (value != null) {
            setId(value.getId());
            setGrade(value.getGrade());
            setSchoolLevel(value.getSchoolLevel());
            setDescriptionI18nId(value.getDescriptionI18nId());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
        }
    }
}
