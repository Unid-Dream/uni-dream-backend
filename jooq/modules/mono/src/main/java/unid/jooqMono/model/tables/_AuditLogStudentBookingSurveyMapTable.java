/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables;


import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import unid.jooqMono.model.Public;
import unid.jooqMono.model.tables.records._AuditLogStudentBookingSurveyMapRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _AuditLogStudentBookingSurveyMapTable extends TableImpl<_AuditLogStudentBookingSurveyMapRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>public._audit_log_student_booking_survey_map</code>
     */
    public static final _AuditLogStudentBookingSurveyMapTable _AUDIT_LOG_STUDENT_BOOKING_SURVEY_MAP = new _AuditLogStudentBookingSurveyMapTable();

    /**
     * The class holding records for this type
     */
    @Override
    @Nonnull
    public Class<_AuditLogStudentBookingSurveyMapRecord> getRecordType() {
        return _AuditLogStudentBookingSurveyMapRecord.class;
    }

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.audit_seq</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, Long> AUDIT_SEQ = createField(DSL.name("audit_seq"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.audit_createdon</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, OffsetDateTime> AUDIT_CREATEDON = createField(DSL.name("audit_createdon"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.audit_createdby</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, String> AUDIT_CREATEDBY = createField(DSL.name("audit_createdby"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.audit_operation</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, String> AUDIT_OPERATION = createField(DSL.name("audit_operation"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.audit_type</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, String> AUDIT_TYPE = createField(DSL.name("audit_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public._audit_log_student_booking_survey_map.id</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.educator_calendar_id</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, UUID> EDUCATOR_CALENDAR_ID = createField(DSL.name("educator_calendar_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.student_session_survey_id</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, UUID> STUDENT_SESSION_SURVEY_ID = createField(DSL.name("student_session_survey_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.student_session_survey_version_asked</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, OffsetDateTime> STUDENT_SESSION_SURVEY_VERSION_ASKED = createField(DSL.name("student_session_survey_version_asked"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.student_session_survey_version_completed</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, OffsetDateTime> STUDENT_SESSION_SURVEY_VERSION_COMPLETED = createField(DSL.name("student_session_survey_version_completed"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.completed</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, Boolean> COMPLETED = createField(DSL.name("completed"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.created_on</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, OffsetDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.created_by</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.updated_on</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, OffsetDateTime> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>public._audit_log_student_booking_survey_map.updated_by</code>.
     */
    public final TableField<_AuditLogStudentBookingSurveyMapRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.CLOB, this, "");

    private _AuditLogStudentBookingSurveyMapTable(Name alias, Table<_AuditLogStudentBookingSurveyMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private _AuditLogStudentBookingSurveyMapTable(Name alias, Table<_AuditLogStudentBookingSurveyMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>public._audit_log_student_booking_survey_map</code> table reference
     */
    public _AuditLogStudentBookingSurveyMapTable(String alias) {
        this(DSL.name(alias), _AUDIT_LOG_STUDENT_BOOKING_SURVEY_MAP);
    }

    /**
     * Create an aliased
     * <code>public._audit_log_student_booking_survey_map</code> table reference
     */
    public _AuditLogStudentBookingSurveyMapTable(Name alias) {
        this(alias, _AUDIT_LOG_STUDENT_BOOKING_SURVEY_MAP);
    }

    /**
     * Create a <code>public._audit_log_student_booking_survey_map</code> table
     * reference
     */
    public _AuditLogStudentBookingSurveyMapTable() {
        this(DSL.name("_audit_log_student_booking_survey_map"), null);
    }

    public <O extends Record> _AuditLogStudentBookingSurveyMapTable(Table<O> child, ForeignKey<O, _AuditLogStudentBookingSurveyMapRecord> key) {
        super(child, key, _AUDIT_LOG_STUDENT_BOOKING_SURVEY_MAP);
    }

    @Override
    @Nonnull
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    @Nonnull
    public Identity<_AuditLogStudentBookingSurveyMapRecord, Long> getIdentity() {
        return (Identity<_AuditLogStudentBookingSurveyMapRecord, Long>) super.getIdentity();
    }

    @Override
    @Nonnull
    public _AuditLogStudentBookingSurveyMapTable as(String alias) {
        return new _AuditLogStudentBookingSurveyMapTable(DSL.name(alias), this);
    }

    @Override
    @Nonnull
    public _AuditLogStudentBookingSurveyMapTable as(Name alias) {
        return new _AuditLogStudentBookingSurveyMapTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    @Nonnull
    public _AuditLogStudentBookingSurveyMapTable rename(String name) {
        return new _AuditLogStudentBookingSurveyMapTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    @Nonnull
    public _AuditLogStudentBookingSurveyMapTable rename(Name name) {
        return new _AuditLogStudentBookingSurveyMapTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row15<Long, OffsetDateTime, String, String, String, UUID, UUID, UUID, OffsetDateTime, OffsetDateTime, Boolean, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
