/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.enums.QuestionnaireAnswerTypeEnum;
import unid.jooqMono.model.tables.StudentQuestionnaireAnswerTable;
import unid.jooqMono.model.tables.pojos.StudentQuestionnaireAnswerPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class StudentQuestionnaireAnswerRecord extends UpdatableRecordImpl<StudentQuestionnaireAnswerRecord> implements Record11<UUID, UUID, Integer, UUID, UUID, BigDecimal, QuestionnaireAnswerTypeEnum, OffsetDateTime, String, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.student_questionnaire_answer.id</code>.
     */
    public StudentQuestionnaireAnswerRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.student_questionnaire_answer.student_questionnaire_question_id</code>.
     */
    public StudentQuestionnaireAnswerRecord setStudentQuestionnaireQuestionId(@Nonnull UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_questionnaire_answer.student_questionnaire_question_id</code>.
     */
    @NotNull
    @Nonnull
    public UUID getStudentQuestionnaireQuestionId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.order</code>.
     */
    public StudentQuestionnaireAnswerRecord setOrder(@Nonnull Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.order</code>.
     */
    @NotNull
    @Nonnull
    public Integer getOrder() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>public.student_questionnaire_answer.description_i18n_id</code>.
     */
    public StudentQuestionnaireAnswerRecord setDescriptionI18nId(@Nullable UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_questionnaire_answer.description_i18n_id</code>.
     */
    @Nullable
    public UUID getDescriptionI18nId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.tag_id</code>.
     */
    public StudentQuestionnaireAnswerRecord setTagId(@Nullable UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.tag_id</code>.
     */
    @Nullable
    public UUID getTagId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.score</code>.
     */
    public StudentQuestionnaireAnswerRecord setScore(@Nullable BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.score</code>.
     */
    @Nullable
    public BigDecimal getScore() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.type</code>.
     */
    public StudentQuestionnaireAnswerRecord setType(@Nonnull QuestionnaireAnswerTypeEnum value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.type</code>.
     */
    @Nonnull
    public QuestionnaireAnswerTypeEnum getType() {
        return (QuestionnaireAnswerTypeEnum) get(6);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.created_on</code>.
     */
    public StudentQuestionnaireAnswerRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.created_by</code>.
     */
    public StudentQuestionnaireAnswerRecord setCreatedBy(@Nullable String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.updated_on</code>.
     */
    public StudentQuestionnaireAnswerRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.student_questionnaire_answer.updated_by</code>.
     */
    public StudentQuestionnaireAnswerRecord setUpdatedBy(@Nullable String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire_answer.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row11<UUID, UUID, Integer, UUID, UUID, BigDecimal, QuestionnaireAnswerTypeEnum, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row11<UUID, UUID, Integer, UUID, UUID, BigDecimal, QuestionnaireAnswerTypeEnum, OffsetDateTime, String, OffsetDateTime, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.STUDENT_QUESTIONNAIRE_QUESTION_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field3() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.ORDER;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.DESCRIPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field5() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.TAG_ID;
    }

    @Override
    @Nonnull
    public Field<BigDecimal> field6() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.SCORE;
    }

    @Override
    @Nonnull
    public Field<QuestionnaireAnswerTypeEnum> field7() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.TYPE;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field8() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field9() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field10() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field11() {
        return StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER.UPDATED_BY;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getStudentQuestionnaireQuestionId();
    }

    @Override
    @Nonnull
    public Integer component3() {
        return getOrder();
    }

    @Override
    @Nullable
    public UUID component4() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public UUID component5() {
        return getTagId();
    }

    @Override
    @Nullable
    public BigDecimal component6() {
        return getScore();
    }

    @Override
    @Nonnull
    public QuestionnaireAnswerTypeEnum component7() {
        return getType();
    }

    @Override
    @Nullable
    public OffsetDateTime component8() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component9() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component10() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component11() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getStudentQuestionnaireQuestionId();
    }

    @Override
    @Nonnull
    public Integer value3() {
        return getOrder();
    }

    @Override
    @Nullable
    public UUID value4() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public UUID value5() {
        return getTagId();
    }

    @Override
    @Nullable
    public BigDecimal value6() {
        return getScore();
    }

    @Override
    @Nonnull
    public QuestionnaireAnswerTypeEnum value7() {
        return getType();
    }

    @Override
    @Nullable
    public OffsetDateTime value8() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value9() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value10() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value11() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value2(@Nonnull UUID value) {
        setStudentQuestionnaireQuestionId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value3(@Nonnull Integer value) {
        setOrder(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value4(@Nullable UUID value) {
        setDescriptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value5(@Nullable UUID value) {
        setTagId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value6(@Nullable BigDecimal value) {
        setScore(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value7(@Nonnull QuestionnaireAnswerTypeEnum value) {
        setType(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value8(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value9(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value10(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord value11(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireAnswerRecord values(@Nonnull UUID value1, @Nonnull UUID value2, @Nonnull Integer value3, @Nullable UUID value4, @Nullable UUID value5, @Nullable BigDecimal value6, @Nonnull QuestionnaireAnswerTypeEnum value7, @Nullable OffsetDateTime value8, @Nullable String value9, @Nullable OffsetDateTime value10, @Nullable String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentQuestionnaireAnswerRecord
     */
    public StudentQuestionnaireAnswerRecord() {
        super(StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER);
    }

    /**
     * Create a detached, initialised StudentQuestionnaireAnswerRecord
     */
    @ConstructorProperties({ "id", "studentQuestionnaireQuestionId", "order", "descriptionI18nId", "tagId", "score", "type", "createdOn", "createdBy", "updatedOn", "updatedBy" })
    public StudentQuestionnaireAnswerRecord(@Nonnull UUID id, @Nonnull UUID studentQuestionnaireQuestionId, @Nonnull Integer order, @Nullable UUID descriptionI18nId, @Nullable UUID tagId, @Nullable BigDecimal score, @Nonnull QuestionnaireAnswerTypeEnum type, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy) {
        super(StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER);

        setId(id);
        setStudentQuestionnaireQuestionId(studentQuestionnaireQuestionId);
        setOrder(order);
        setDescriptionI18nId(descriptionI18nId);
        setTagId(tagId);
        setScore(score);
        setType(type);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised StudentQuestionnaireAnswerRecord
     */
    public StudentQuestionnaireAnswerRecord(StudentQuestionnaireAnswerPojo value) {
        super(StudentQuestionnaireAnswerTable.STUDENT_QUESTIONNAIRE_ANSWER);

        if (value != null) {
            setId(value.getId());
            setStudentQuestionnaireQuestionId(value.getStudentQuestionnaireQuestionId());
            setOrder(value.getOrder());
            setDescriptionI18nId(value.getDescriptionI18nId());
            setTagId(value.getTagId());
            setScore(value.getScore());
            setType(value.getType());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
        }
    }
}
