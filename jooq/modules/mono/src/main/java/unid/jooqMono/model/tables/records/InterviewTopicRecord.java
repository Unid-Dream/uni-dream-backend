/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.enums.CurrencyEnum;
import unid.jooqMono.model.tables.InterviewTopicTable;
import unid.jooqMono.model.tables.pojos.InterviewTopicPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class InterviewTopicRecord extends UpdatableRecordImpl<InterviewTopicRecord> implements Record9<UUID, UUID, BigDecimal, CurrencyEnum, OffsetDateTime, String, OffsetDateTime, String, UUID[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.interview_topic.id</code>.
     */
    public InterviewTopicRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.interview_topic.description_i18n_id</code>.
     */
    public InterviewTopicRecord setDescriptionI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.description_i18n_id</code>.
     */
    @Nullable
    public UUID getDescriptionI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.interview_topic.price</code>.
     */
    public InterviewTopicRecord setPrice(@Nullable BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.price</code>.
     */
    @Nullable
    public BigDecimal getPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.interview_topic.currency</code>.
     */
    public InterviewTopicRecord setCurrency(@Nullable CurrencyEnum value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.currency</code>.
     */
    @Nullable
    public CurrencyEnum getCurrency() {
        return (CurrencyEnum) get(3);
    }

    /**
     * Setter for <code>public.interview_topic.created_on</code>.
     */
    public InterviewTopicRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.interview_topic.created_by</code>.
     */
    public InterviewTopicRecord setCreatedBy(@Nullable String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.interview_topic.updated_on</code>.
     */
    public InterviewTopicRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.interview_topic.updated_by</code>.
     */
    public InterviewTopicRecord setUpdatedBy(@Nullable String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.interview_topic.topic_i18n_id</code>.
     */
    public InterviewTopicRecord setTopicI18nId(@Nullable UUID[] value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.interview_topic.topic_i18n_id</code>.
     */
    @Nullable
    public UUID[] getTopicI18nId() {
        return (UUID[]) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row9<UUID, UUID, BigDecimal, CurrencyEnum, OffsetDateTime, String, OffsetDateTime, String, UUID[]> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row9<UUID, UUID, BigDecimal, CurrencyEnum, OffsetDateTime, String, OffsetDateTime, String, UUID[]> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return InterviewTopicTable.INTERVIEW_TOPIC.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return InterviewTopicTable.INTERVIEW_TOPIC.DESCRIPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<BigDecimal> field3() {
        return InterviewTopicTable.INTERVIEW_TOPIC.PRICE;
    }

    @Override
    @Nonnull
    public Field<CurrencyEnum> field4() {
        return InterviewTopicTable.INTERVIEW_TOPIC.CURRENCY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field5() {
        return InterviewTopicTable.INTERVIEW_TOPIC.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field6() {
        return InterviewTopicTable.INTERVIEW_TOPIC.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field7() {
        return InterviewTopicTable.INTERVIEW_TOPIC.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field8() {
        return InterviewTopicTable.INTERVIEW_TOPIC.UPDATED_BY;
    }

    @Override
    @Nonnull
    public Field<UUID[]> field9() {
        return InterviewTopicTable.INTERVIEW_TOPIC.TOPIC_I18N_ID;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public BigDecimal component3() {
        return getPrice();
    }

    @Override
    @Nullable
    public CurrencyEnum component4() {
        return getCurrency();
    }

    @Override
    @Nullable
    public OffsetDateTime component5() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component6() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component7() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component8() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public UUID[] component9() {
        return getTopicI18nId();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public BigDecimal value3() {
        return getPrice();
    }

    @Override
    @Nullable
    public CurrencyEnum value4() {
        return getCurrency();
    }

    @Override
    @Nullable
    public OffsetDateTime value5() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value6() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value7() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value8() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public UUID[] value9() {
        return getTopicI18nId();
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value2(@Nullable UUID value) {
        setDescriptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value3(@Nullable BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value4(@Nullable CurrencyEnum value) {
        setCurrency(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value5(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value6(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value7(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value8(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord value9(@Nullable UUID[] value) {
        setTopicI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public InterviewTopicRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable BigDecimal value3, @Nullable CurrencyEnum value4, @Nullable OffsetDateTime value5, @Nullable String value6, @Nullable OffsetDateTime value7, @Nullable String value8, @Nullable UUID[] value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InterviewTopicRecord
     */
    public InterviewTopicRecord() {
        super(InterviewTopicTable.INTERVIEW_TOPIC);
    }

    /**
     * Create a detached, initialised InterviewTopicRecord
     */
    @ConstructorProperties({ "id", "descriptionI18nId", "price", "currency", "createdOn", "createdBy", "updatedOn", "updatedBy", "topicI18nId" })
    public InterviewTopicRecord(@Nonnull UUID id, @Nullable UUID descriptionI18nId, @Nullable BigDecimal price, @Nullable CurrencyEnum currency, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy, @Nullable UUID[] topicI18nId) {
        super(InterviewTopicTable.INTERVIEW_TOPIC);

        setId(id);
        setDescriptionI18nId(descriptionI18nId);
        setPrice(price);
        setCurrency(currency);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
        setTopicI18nId(topicI18nId);
    }

    /**
     * Create a detached, initialised InterviewTopicRecord
     */
    public InterviewTopicRecord(InterviewTopicPojo value) {
        super(InterviewTopicTable.INTERVIEW_TOPIC);

        if (value != null) {
            setId(value.getId());
            setDescriptionI18nId(value.getDescriptionI18nId());
            setPrice(value.getPrice());
            setCurrency(value.getCurrency());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
            setTopicI18nId(value.getTopicI18nId());
        }
    }
}
