/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record2;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.StudentQuestionnaireTable;
import unid.jooqMono.model.tables.pojos.StudentQuestionnairePojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class StudentQuestionnaireRecord extends UpdatableRecordImpl<StudentQuestionnaireRecord> implements Record11<UUID, OffsetDateTime, UUID, UUID, UUID, String[], Boolean, OffsetDateTime, String, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.student_questionnaire.id</code>.
     */
    public StudentQuestionnaireRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.student_questionnaire.version</code>.
     */
    public StudentQuestionnaireRecord setVersion(@Nonnull OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.version</code>.
     */
    @Nonnull
    public OffsetDateTime getVersion() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.student_questionnaire.title_i18n_id</code>.
     */
    public StudentQuestionnaireRecord setTitleI18nId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.title_i18n_id</code>.
     */
    @Nullable
    public UUID getTitleI18nId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.student_questionnaire.sub_title_i18n_id</code>.
     */
    public StudentQuestionnaireRecord setSubTitleI18nId(@Nullable UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.sub_title_i18n_id</code>.
     */
    @Nullable
    public UUID getSubTitleI18nId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.student_questionnaire.description_i18n_id</code>.
     */
    public StudentQuestionnaireRecord setDescriptionI18nId(@Nullable UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.description_i18n_id</code>.
     */
    @Nullable
    public UUID getDescriptionI18nId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.student_questionnaire.sections</code>.
     */
    public StudentQuestionnaireRecord setSections(@Nullable String[] value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.sections</code>.
     */
    @Nullable
    public String[] getSections() {
        return (String[]) get(5);
    }

    /**
     * Setter for
     * <code>public.student_questionnaire.mandatory_on_new_join_student</code>.
     */
    public StudentQuestionnaireRecord setMandatoryOnNewJoinStudent(@Nullable Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_questionnaire.mandatory_on_new_join_student</code>.
     */
    @Nullable
    public Boolean getMandatoryOnNewJoinStudent() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.student_questionnaire.created_on</code>.
     */
    public StudentQuestionnaireRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.student_questionnaire.created_by</code>.
     */
    public StudentQuestionnaireRecord setCreatedBy(@Nullable String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.student_questionnaire.updated_on</code>.
     */
    public StudentQuestionnaireRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.student_questionnaire.updated_by</code>.
     */
    public StudentQuestionnaireRecord setUpdatedBy(@Nullable String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.student_questionnaire.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record2<UUID, OffsetDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row11<UUID, OffsetDateTime, UUID, UUID, UUID, String[], Boolean, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row11<UUID, OffsetDateTime, UUID, UUID, UUID, String[], Boolean, OffsetDateTime, String, OffsetDateTime, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.ID;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field2() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.VERSION;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.TITLE_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.SUB_TITLE_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field5() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.DESCRIPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<String[]> field6() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.SECTIONS;
    }

    @Override
    @Nonnull
    public Field<Boolean> field7() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.MANDATORY_ON_NEW_JOIN_STUDENT;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field8() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field9() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field10() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field11() {
        return StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE.UPDATED_BY;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public OffsetDateTime component2() {
        return getVersion();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public UUID component4() {
        return getSubTitleI18nId();
    }

    @Override
    @Nullable
    public UUID component5() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public String[] component6() {
        return getSections();
    }

    @Override
    @Nullable
    public Boolean component7() {
        return getMandatoryOnNewJoinStudent();
    }

    @Override
    @Nullable
    public OffsetDateTime component8() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component9() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component10() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component11() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public OffsetDateTime value2() {
        return getVersion();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public UUID value4() {
        return getSubTitleI18nId();
    }

    @Override
    @Nullable
    public UUID value5() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public String[] value6() {
        return getSections();
    }

    @Override
    @Nullable
    public Boolean value7() {
        return getMandatoryOnNewJoinStudent();
    }

    @Override
    @Nullable
    public OffsetDateTime value8() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value9() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value10() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value11() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value2(@Nonnull OffsetDateTime value) {
        setVersion(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value3(@Nullable UUID value) {
        setTitleI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value4(@Nullable UUID value) {
        setSubTitleI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value5(@Nullable UUID value) {
        setDescriptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value6(@Nullable String[] value) {
        setSections(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value7(@Nullable Boolean value) {
        setMandatoryOnNewJoinStudent(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value8(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value9(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value10(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord value11(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentQuestionnaireRecord values(@Nonnull UUID value1, @Nonnull OffsetDateTime value2, @Nullable UUID value3, @Nullable UUID value4, @Nullable UUID value5, @Nullable String[] value6, @Nullable Boolean value7, @Nullable OffsetDateTime value8, @Nullable String value9, @Nullable OffsetDateTime value10, @Nullable String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentQuestionnaireRecord
     */
    public StudentQuestionnaireRecord() {
        super(StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE);
    }

    /**
     * Create a detached, initialised StudentQuestionnaireRecord
     */
    @ConstructorProperties({ "id", "version", "titleI18nId", "subTitleI18nId", "descriptionI18nId", "sections", "mandatoryOnNewJoinStudent", "createdOn", "createdBy", "updatedOn", "updatedBy" })
    public StudentQuestionnaireRecord(@Nonnull UUID id, @Nonnull OffsetDateTime version, @Nullable UUID titleI18nId, @Nullable UUID subTitleI18nId, @Nullable UUID descriptionI18nId, @Nullable String[] sections, @Nullable Boolean mandatoryOnNewJoinStudent, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy) {
        super(StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE);

        setId(id);
        setVersion(version);
        setTitleI18nId(titleI18nId);
        setSubTitleI18nId(subTitleI18nId);
        setDescriptionI18nId(descriptionI18nId);
        setSections(sections);
        setMandatoryOnNewJoinStudent(mandatoryOnNewJoinStudent);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised StudentQuestionnaireRecord
     */
    public StudentQuestionnaireRecord(StudentQuestionnairePojo value) {
        super(StudentQuestionnaireTable.STUDENT_QUESTIONNAIRE);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setTitleI18nId(value.getTitleI18nId());
            setSubTitleI18nId(value.getSubTitleI18nId());
            setDescriptionI18nId(value.getDescriptionI18nId());
            setSections(value.getSections());
            setMandatoryOnNewJoinStudent(value.getMandatoryOnNewJoinStudent());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
        }
    }
}
