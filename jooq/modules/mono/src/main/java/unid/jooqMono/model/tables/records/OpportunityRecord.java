/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.OpportunityTable;
import unid.jooqMono.model.tables.pojos.OpportunityPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class OpportunityRecord extends UpdatableRecordImpl<OpportunityRecord> implements Record6<UUID, UUID, OffsetDateTime, String, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.opportunity.id</code>.
     */
    public OpportunityRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.opportunity.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.opportunity.title_i18n_id</code>.
     */
    public OpportunityRecord setTitleI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.opportunity.title_i18n_id</code>.
     */
    @Nullable
    public UUID getTitleI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.opportunity.created_on</code>.
     */
    public OpportunityRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.opportunity.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.opportunity.created_by</code>.
     */
    public OpportunityRecord setCreatedBy(@Nullable String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.opportunity.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.opportunity.updated_on</code>.
     */
    public OpportunityRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.opportunity.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.opportunity.updated_by</code>.
     */
    public OpportunityRecord setUpdatedBy(@Nullable String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.opportunity.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row6<UUID, UUID, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row6<UUID, UUID, OffsetDateTime, String, OffsetDateTime, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return OpportunityTable.OPPORTUNITY.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return OpportunityTable.OPPORTUNITY.TITLE_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field3() {
        return OpportunityTable.OPPORTUNITY.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return OpportunityTable.OPPORTUNITY.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field5() {
        return OpportunityTable.OPPORTUNITY.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field6() {
        return OpportunityTable.OPPORTUNITY.UPDATED_BY;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public OffsetDateTime component3() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component4() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component5() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component6() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public OffsetDateTime value3() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value4() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value5() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value6() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public OpportunityRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public OpportunityRecord value2(@Nullable UUID value) {
        setTitleI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public OpportunityRecord value3(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public OpportunityRecord value4(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public OpportunityRecord value5(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public OpportunityRecord value6(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public OpportunityRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable OffsetDateTime value3, @Nullable String value4, @Nullable OffsetDateTime value5, @Nullable String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OpportunityRecord
     */
    public OpportunityRecord() {
        super(OpportunityTable.OPPORTUNITY);
    }

    /**
     * Create a detached, initialised OpportunityRecord
     */
    @ConstructorProperties({ "id", "titleI18nId", "createdOn", "createdBy", "updatedOn", "updatedBy" })
    public OpportunityRecord(@Nonnull UUID id, @Nullable UUID titleI18nId, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy) {
        super(OpportunityTable.OPPORTUNITY);

        setId(id);
        setTitleI18nId(titleI18nId);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised OpportunityRecord
     */
    public OpportunityRecord(OpportunityPojo value) {
        super(OpportunityTable.OPPORTUNITY);

        if (value != null) {
            setId(value.getId());
            setTitleI18nId(value.getTitleI18nId());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
        }
    }
}
