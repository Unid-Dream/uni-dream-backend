/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.EcaProfileOptionTable;
import unid.jooqMono.model.tables.pojos.EcaProfileOptionPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class EcaProfileOptionRecord extends UpdatableRecordImpl<EcaProfileOptionRecord> implements Record4<UUID, UUID, UUID, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.eca_profile_option.id</code>.
     */
    public EcaProfileOptionRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.eca_profile_option.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.eca_profile_option.option_i18n_id</code>.
     */
    public EcaProfileOptionRecord setOptionI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.eca_profile_option.option_i18n_id</code>.
     */
    @Nullable
    public UUID getOptionI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.eca_profile_option.section_id</code>.
     */
    public EcaProfileOptionRecord setSectionId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.eca_profile_option.section_id</code>.
     */
    @Nullable
    public UUID getSectionId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.eca_profile_option.score</code>.
     */
    public EcaProfileOptionRecord setScore(@Nullable Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.eca_profile_option.score</code>.
     */
    @Nullable
    public Integer getScore() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<UUID, UUID, UUID, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<UUID, UUID, UUID, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return EcaProfileOptionTable.ECA_PROFILE_OPTION.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return EcaProfileOptionTable.ECA_PROFILE_OPTION.OPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return EcaProfileOptionTable.ECA_PROFILE_OPTION.SECTION_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field4() {
        return EcaProfileOptionTable.ECA_PROFILE_OPTION.SCORE;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getOptionI18nId();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getSectionId();
    }

    @Override
    @Nullable
    public Integer component4() {
        return getScore();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getOptionI18nId();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getSectionId();
    }

    @Override
    @Nullable
    public Integer value4() {
        return getScore();
    }

    @Override
    @Nonnull
    public EcaProfileOptionRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public EcaProfileOptionRecord value2(@Nullable UUID value) {
        setOptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public EcaProfileOptionRecord value3(@Nullable UUID value) {
        setSectionId(value);
        return this;
    }

    @Override
    @Nonnull
    public EcaProfileOptionRecord value4(@Nullable Integer value) {
        setScore(value);
        return this;
    }

    @Override
    @Nonnull
    public EcaProfileOptionRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable UUID value3, @Nullable Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EcaProfileOptionRecord
     */
    public EcaProfileOptionRecord() {
        super(EcaProfileOptionTable.ECA_PROFILE_OPTION);
    }

    /**
     * Create a detached, initialised EcaProfileOptionRecord
     */
    @ConstructorProperties({ "id", "optionI18nId", "sectionId", "score" })
    public EcaProfileOptionRecord(@Nonnull UUID id, @Nullable UUID optionI18nId, @Nullable UUID sectionId, @Nullable Integer score) {
        super(EcaProfileOptionTable.ECA_PROFILE_OPTION);

        setId(id);
        setOptionI18nId(optionI18nId);
        setSectionId(sectionId);
        setScore(score);
    }

    /**
     * Create a detached, initialised EcaProfileOptionRecord
     */
    public EcaProfileOptionRecord(EcaProfileOptionPojo value) {
        super(EcaProfileOptionTable.ECA_PROFILE_OPTION);

        if (value != null) {
            setId(value.getId());
            setOptionI18nId(value.getOptionI18nId());
            setSectionId(value.getSectionId());
            setScore(value.getScore());
        }
    }
}
