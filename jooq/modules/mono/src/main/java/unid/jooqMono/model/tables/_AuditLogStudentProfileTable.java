/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables;


import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import unid.jooqMono.model.Public;
import unid.jooqMono.model.enums.GenderEnum;
import unid.jooqMono.model.tables.records._AuditLogStudentProfileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _AuditLogStudentProfileTable extends TableImpl<_AuditLogStudentProfileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public._audit_log_student_profile</code>
     */
    public static final _AuditLogStudentProfileTable _AUDIT_LOG_STUDENT_PROFILE = new _AuditLogStudentProfileTable();

    /**
     * The class holding records for this type
     */
    @Override
    @Nonnull
    public Class<_AuditLogStudentProfileRecord> getRecordType() {
        return _AuditLogStudentProfileRecord.class;
    }

    /**
     * The column <code>public._audit_log_student_profile.audit_seq</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, Long> AUDIT_SEQ = createField(DSL.name("audit_seq"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.audit_createdon</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, OffsetDateTime> AUDIT_CREATEDON = createField(DSL.name("audit_createdon"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.audit_createdby</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> AUDIT_CREATEDBY = createField(DSL.name("audit_createdby"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.audit_operation</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> AUDIT_OPERATION = createField(DSL.name("audit_operation"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public._audit_log_student_profile.audit_type</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> AUDIT_TYPE = createField(DSL.name("audit_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public._audit_log_student_profile.id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public._audit_log_student_profile.user_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> USER_ID = createField(DSL.name("user_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public._audit_log_student_profile.date_of_birth</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, LocalDate> DATE_OF_BIRTH = createField(DSL.name("date_of_birth"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public._audit_log_student_profile.gender</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, GenderEnum> GENDER = createField(DSL.name("gender"), SQLDataType.VARCHAR.asEnumDataType(unid.jooqMono.model.enums.GenderEnum.class), this, "");

    /**
     * The column <code>public._audit_log_student_profile.country_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> COUNTRY_ID = createField(DSL.name("country_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.profile_picture</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> PROFILE_PICTURE = createField(DSL.name("profile_picture"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.phone_country_code</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> PHONE_COUNTRY_CODE = createField(DSL.name("phone_country_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public._audit_log_student_profile.phone</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> PHONE = createField(DSL.name("phone"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.secondary_school_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> SECONDARY_SCHOOL_ID = createField(DSL.name("secondary_school_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.secondary_school_education_level_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> SECONDARY_SCHOOL_EDUCATION_LEVEL_ID = createField(DSL.name("secondary_school_education_level_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.secondary_school_curriculum_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> SECONDARY_SCHOOL_CURRICULUM_ID = createField(DSL.name("secondary_school_curriculum_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.preferred_university_1_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> PREFERRED_UNIVERSITY_1_ID = createField(DSL.name("preferred_university_1_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.preferred_university_2_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> PREFERRED_UNIVERSITY_2_ID = createField(DSL.name("preferred_university_2_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.preferred_university_3_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID> PREFERRED_UNIVERSITY_3_ID = createField(DSL.name("preferred_university_3_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public._audit_log_student_profile.created_on</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, OffsetDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>public._audit_log_student_profile.created_by</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public._audit_log_student_profile.updated_on</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, OffsetDateTime> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>public._audit_log_student_profile.updated_by</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.preferred_other_university_id</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, UUID[]> PREFERRED_OTHER_UNIVERSITY_ID = createField(DSL.name("preferred_other_university_id"), SQLDataType.UUID.getArrayDataType(), this, "");

    /**
     * The column
     * <code>public._audit_log_student_profile.secondary_school_graduation_year</code>.
     */
    public final TableField<_AuditLogStudentProfileRecord, String> SECONDARY_SCHOOL_GRADUATION_YEAR = createField(DSL.name("secondary_school_graduation_year"), SQLDataType.VARCHAR(100), this, "");

    private _AuditLogStudentProfileTable(Name alias, Table<_AuditLogStudentProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private _AuditLogStudentProfileTable(Name alias, Table<_AuditLogStudentProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public._audit_log_student_profile</code> table
     * reference
     */
    public _AuditLogStudentProfileTable(String alias) {
        this(DSL.name(alias), _AUDIT_LOG_STUDENT_PROFILE);
    }

    /**
     * Create an aliased <code>public._audit_log_student_profile</code> table
     * reference
     */
    public _AuditLogStudentProfileTable(Name alias) {
        this(alias, _AUDIT_LOG_STUDENT_PROFILE);
    }

    /**
     * Create a <code>public._audit_log_student_profile</code> table reference
     */
    public _AuditLogStudentProfileTable() {
        this(DSL.name("_audit_log_student_profile"), null);
    }

    public <O extends Record> _AuditLogStudentProfileTable(Table<O> child, ForeignKey<O, _AuditLogStudentProfileRecord> key) {
        super(child, key, _AUDIT_LOG_STUDENT_PROFILE);
    }

    @Override
    @Nonnull
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    @Nonnull
    public Identity<_AuditLogStudentProfileRecord, Long> getIdentity() {
        return (Identity<_AuditLogStudentProfileRecord, Long>) super.getIdentity();
    }

    @Override
    @Nonnull
    public _AuditLogStudentProfileTable as(String alias) {
        return new _AuditLogStudentProfileTable(DSL.name(alias), this);
    }

    @Override
    @Nonnull
    public _AuditLogStudentProfileTable as(Name alias) {
        return new _AuditLogStudentProfileTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    @Nonnull
    public _AuditLogStudentProfileTable rename(String name) {
        return new _AuditLogStudentProfileTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    @Nonnull
    public _AuditLogStudentProfileTable rename(Name name) {
        return new _AuditLogStudentProfileTable(name, null);
    }
}
