/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.enums.EventStatusEnum;
import unid.jooqMono.model.enums.EventTypeEnum;
import unid.jooqMono.model.tables.EventTable;
import unid.jooqMono.model.tables.pojos.EventPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record20<UUID, UUID, UUID, EventTypeEnum, LocalDate, LocalDate, LocalTime, LocalTime, BigDecimal, BigDecimal, String, BigDecimal, OffsetDateTime, String, OffsetDateTime, String, UUID, UUID, EventStatusEnum, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.event.id</code>.
     */
    public EventRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.event.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.event.title_i18n_id</code>.
     */
    public EventRecord setTitleI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.event.title_i18n_id</code>.
     */
    @Nullable
    public UUID getTitleI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.event.description_i18n_id</code>.
     */
    public EventRecord setDescriptionI18nId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.event.description_i18n_id</code>.
     */
    @Nullable
    public UUID getDescriptionI18nId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.event.event_type</code>.
     */
    public EventRecord setEventType(@Nonnull EventTypeEnum value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.event.event_type</code>.
     */
    @NotNull
    @Nonnull
    public EventTypeEnum getEventType() {
        return (EventTypeEnum) get(3);
    }

    /**
     * Setter for <code>public.event.start_date</code>.
     */
    public EventRecord setStartDate(@Nullable LocalDate value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.event.start_date</code>.
     */
    @Nullable
    public LocalDate getStartDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.event.end_date</code>.
     */
    public EventRecord setEndDate(@Nullable LocalDate value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.event.end_date</code>.
     */
    @Nullable
    public LocalDate getEndDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>public.event.start_time</code>.
     */
    public EventRecord setStartTime(@Nullable LocalTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.event.start_time</code>.
     */
    @Nullable
    public LocalTime getStartTime() {
        return (LocalTime) get(6);
    }

    /**
     * Setter for <code>public.event.end_time</code>.
     */
    public EventRecord setEndTime(@Nullable LocalTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.event.end_time</code>.
     */
    @Nullable
    public LocalTime getEndTime() {
        return (LocalTime) get(7);
    }

    /**
     * Setter for <code>public.event.max_number_of_student</code>.
     */
    public EventRecord setMaxNumberOfStudent(@Nullable BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.event.max_number_of_student</code>.
     */
    @Nullable
    public BigDecimal getMaxNumberOfStudent() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>public.event.fee</code>.
     */
    public EventRecord setFee(@Nullable BigDecimal value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.event.fee</code>.
     */
    @Nullable
    public BigDecimal getFee() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>public.event.poster_image</code>.
     */
    public EventRecord setPosterImage(@Nullable String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.event.poster_image</code>.
     */
    @Nullable
    public String getPosterImage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.event.price</code>.
     */
    public EventRecord setPrice(@Nullable BigDecimal value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.event.price</code>.
     */
    @Nullable
    public BigDecimal getPrice() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>public.event.created_on</code>.
     */
    public EventRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.event.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for <code>public.event.created_by</code>.
     */
    public EventRecord setCreatedBy(@Nullable String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.event.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.event.updated_on</code>.
     */
    public EventRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.event.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(14);
    }

    /**
     * Setter for <code>public.event.updated_by</code>.
     */
    public EventRecord setUpdatedBy(@Nullable String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.event.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.event.educator_profile_id</code>.
     */
    public EventRecord setEducatorProfileId(@Nullable UUID value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.event.educator_profile_id</code>.
     */
    @Nullable
    public UUID getEducatorProfileId() {
        return (UUID) get(16);
    }

    /**
     * Setter for <code>public.event.agenda_i18n_id</code>.
     */
    public EventRecord setAgendaI18nId(@Nullable UUID value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.event.agenda_i18n_id</code>.
     */
    @Nullable
    public UUID getAgendaI18nId() {
        return (UUID) get(17);
    }

    /**
     * Setter for <code>public.event.event_status</code>.
     */
    public EventRecord setEventStatus(@Nullable EventStatusEnum value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.event.event_status</code>.
     */
    @Nullable
    public EventStatusEnum getEventStatus() {
        return (EventStatusEnum) get(18);
    }

    /**
     * Setter for <code>public.event.academic_major_id</code>.
     */
    public EventRecord setAcademicMajorId(@Nullable UUID value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>public.event.academic_major_id</code>.
     */
    @Nullable
    public UUID getAcademicMajorId() {
        return (UUID) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row20<UUID, UUID, UUID, EventTypeEnum, LocalDate, LocalDate, LocalTime, LocalTime, BigDecimal, BigDecimal, String, BigDecimal, OffsetDateTime, String, OffsetDateTime, String, UUID, UUID, EventStatusEnum, UUID> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row20<UUID, UUID, UUID, EventTypeEnum, LocalDate, LocalDate, LocalTime, LocalTime, BigDecimal, BigDecimal, String, BigDecimal, OffsetDateTime, String, OffsetDateTime, String, UUID, UUID, EventStatusEnum, UUID> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return EventTable.EVENT.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return EventTable.EVENT.TITLE_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return EventTable.EVENT.DESCRIPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<EventTypeEnum> field4() {
        return EventTable.EVENT.EVENT_TYPE;
    }

    @Override
    @Nonnull
    public Field<LocalDate> field5() {
        return EventTable.EVENT.START_DATE;
    }

    @Override
    @Nonnull
    public Field<LocalDate> field6() {
        return EventTable.EVENT.END_DATE;
    }

    @Override
    @Nonnull
    public Field<LocalTime> field7() {
        return EventTable.EVENT.START_TIME;
    }

    @Override
    @Nonnull
    public Field<LocalTime> field8() {
        return EventTable.EVENT.END_TIME;
    }

    @Override
    @Nonnull
    public Field<BigDecimal> field9() {
        return EventTable.EVENT.MAX_NUMBER_OF_STUDENT;
    }

    @Override
    @Nonnull
    public Field<BigDecimal> field10() {
        return EventTable.EVENT.FEE;
    }

    @Override
    @Nonnull
    public Field<String> field11() {
        return EventTable.EVENT.POSTER_IMAGE;
    }

    @Override
    @Nonnull
    public Field<BigDecimal> field12() {
        return EventTable.EVENT.PRICE;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field13() {
        return EventTable.EVENT.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field14() {
        return EventTable.EVENT.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field15() {
        return EventTable.EVENT.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field16() {
        return EventTable.EVENT.UPDATED_BY;
    }

    @Override
    @Nonnull
    public Field<UUID> field17() {
        return EventTable.EVENT.EDUCATOR_PROFILE_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field18() {
        return EventTable.EVENT.AGENDA_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<EventStatusEnum> field19() {
        return EventTable.EVENT.EVENT_STATUS;
    }

    @Override
    @Nonnull
    public Field<UUID> field20() {
        return EventTable.EVENT.ACADEMIC_MAJOR_ID;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getDescriptionI18nId();
    }

    @Override
    @Nonnull
    public EventTypeEnum component4() {
        return getEventType();
    }

    @Override
    @Nullable
    public LocalDate component5() {
        return getStartDate();
    }

    @Override
    @Nullable
    public LocalDate component6() {
        return getEndDate();
    }

    @Override
    @Nullable
    public LocalTime component7() {
        return getStartTime();
    }

    @Override
    @Nullable
    public LocalTime component8() {
        return getEndTime();
    }

    @Override
    @Nullable
    public BigDecimal component9() {
        return getMaxNumberOfStudent();
    }

    @Override
    @Nullable
    public BigDecimal component10() {
        return getFee();
    }

    @Override
    @Nullable
    public String component11() {
        return getPosterImage();
    }

    @Override
    @Nullable
    public BigDecimal component12() {
        return getPrice();
    }

    @Override
    @Nullable
    public OffsetDateTime component13() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component14() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component15() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component16() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public UUID component17() {
        return getEducatorProfileId();
    }

    @Override
    @Nullable
    public UUID component18() {
        return getAgendaI18nId();
    }

    @Override
    @Nullable
    public EventStatusEnum component19() {
        return getEventStatus();
    }

    @Override
    @Nullable
    public UUID component20() {
        return getAcademicMajorId();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getDescriptionI18nId();
    }

    @Override
    @Nonnull
    public EventTypeEnum value4() {
        return getEventType();
    }

    @Override
    @Nullable
    public LocalDate value5() {
        return getStartDate();
    }

    @Override
    @Nullable
    public LocalDate value6() {
        return getEndDate();
    }

    @Override
    @Nullable
    public LocalTime value7() {
        return getStartTime();
    }

    @Override
    @Nullable
    public LocalTime value8() {
        return getEndTime();
    }

    @Override
    @Nullable
    public BigDecimal value9() {
        return getMaxNumberOfStudent();
    }

    @Override
    @Nullable
    public BigDecimal value10() {
        return getFee();
    }

    @Override
    @Nullable
    public String value11() {
        return getPosterImage();
    }

    @Override
    @Nullable
    public BigDecimal value12() {
        return getPrice();
    }

    @Override
    @Nullable
    public OffsetDateTime value13() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value14() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value15() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value16() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public UUID value17() {
        return getEducatorProfileId();
    }

    @Override
    @Nullable
    public UUID value18() {
        return getAgendaI18nId();
    }

    @Override
    @Nullable
    public EventStatusEnum value19() {
        return getEventStatus();
    }

    @Override
    @Nullable
    public UUID value20() {
        return getAcademicMajorId();
    }

    @Override
    @Nonnull
    public EventRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value2(@Nullable UUID value) {
        setTitleI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value3(@Nullable UUID value) {
        setDescriptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value4(@Nonnull EventTypeEnum value) {
        setEventType(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value5(@Nullable LocalDate value) {
        setStartDate(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value6(@Nullable LocalDate value) {
        setEndDate(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value7(@Nullable LocalTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value8(@Nullable LocalTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value9(@Nullable BigDecimal value) {
        setMaxNumberOfStudent(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value10(@Nullable BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value11(@Nullable String value) {
        setPosterImage(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value12(@Nullable BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value13(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value14(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value15(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value16(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value17(@Nullable UUID value) {
        setEducatorProfileId(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value18(@Nullable UUID value) {
        setAgendaI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value19(@Nullable EventStatusEnum value) {
        setEventStatus(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord value20(@Nullable UUID value) {
        setAcademicMajorId(value);
        return this;
    }

    @Override
    @Nonnull
    public EventRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable UUID value3, @Nonnull EventTypeEnum value4, @Nullable LocalDate value5, @Nullable LocalDate value6, @Nullable LocalTime value7, @Nullable LocalTime value8, @Nullable BigDecimal value9, @Nullable BigDecimal value10, @Nullable String value11, @Nullable BigDecimal value12, @Nullable OffsetDateTime value13, @Nullable String value14, @Nullable OffsetDateTime value15, @Nullable String value16, @Nullable UUID value17, @Nullable UUID value18, @Nullable EventStatusEnum value19, @Nullable UUID value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(EventTable.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    @ConstructorProperties({ "id", "titleI18nId", "descriptionI18nId", "eventType", "startDate", "endDate", "startTime", "endTime", "maxNumberOfStudent", "fee", "posterImage", "price", "createdOn", "createdBy", "updatedOn", "updatedBy", "educatorProfileId", "agendaI18nId", "eventStatus", "academicMajorId" })
    public EventRecord(@Nonnull UUID id, @Nullable UUID titleI18nId, @Nullable UUID descriptionI18nId, @Nonnull EventTypeEnum eventType, @Nullable LocalDate startDate, @Nullable LocalDate endDate, @Nullable LocalTime startTime, @Nullable LocalTime endTime, @Nullable BigDecimal maxNumberOfStudent, @Nullable BigDecimal fee, @Nullable String posterImage, @Nullable BigDecimal price, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy, @Nullable UUID educatorProfileId, @Nullable UUID agendaI18nId, @Nullable EventStatusEnum eventStatus, @Nullable UUID academicMajorId) {
        super(EventTable.EVENT);

        setId(id);
        setTitleI18nId(titleI18nId);
        setDescriptionI18nId(descriptionI18nId);
        setEventType(eventType);
        setStartDate(startDate);
        setEndDate(endDate);
        setStartTime(startTime);
        setEndTime(endTime);
        setMaxNumberOfStudent(maxNumberOfStudent);
        setFee(fee);
        setPosterImage(posterImage);
        setPrice(price);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
        setEducatorProfileId(educatorProfileId);
        setAgendaI18nId(agendaI18nId);
        setEventStatus(eventStatus);
        setAcademicMajorId(academicMajorId);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(EventPojo value) {
        super(EventTable.EVENT);

        if (value != null) {
            setId(value.getId());
            setTitleI18nId(value.getTitleI18nId());
            setDescriptionI18nId(value.getDescriptionI18nId());
            setEventType(value.getEventType());
            setStartDate(value.getStartDate());
            setEndDate(value.getEndDate());
            setStartTime(value.getStartTime());
            setEndTime(value.getEndTime());
            setMaxNumberOfStudent(value.getMaxNumberOfStudent());
            setFee(value.getFee());
            setPosterImage(value.getPosterImage());
            setPrice(value.getPrice());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
            setEducatorProfileId(value.getEducatorProfileId());
            setAgendaI18nId(value.getAgendaI18nId());
            setEventStatus(value.getEventStatus());
            setAcademicMajorId(value.getAcademicMajorId());
        }
    }
}
