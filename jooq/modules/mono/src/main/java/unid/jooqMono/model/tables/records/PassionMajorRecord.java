/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.PassionMajorTable;
import unid.jooqMono.model.tables.pojos.PassionMajorPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class PassionMajorRecord extends UpdatableRecordImpl<PassionMajorRecord> implements Record4<UUID, UUID, UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.passion_major.id</code>.
     */
    public PassionMajorRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_major.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.passion_major.name_i18n_id</code>.
     */
    public PassionMajorRecord setNameI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_major.name_i18n_id</code>.
     */
    @Nullable
    public UUID getNameI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.passion_major.desc_i18n_id</code>.
     */
    public PassionMajorRecord setDescI18nId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_major.desc_i18n_id</code>.
     */
    @Nullable
    public UUID getDescI18nId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.passion_major.icon_path</code>.
     */
    public PassionMajorRecord setIconPath(@Nullable String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_major.icon_path</code>.
     */
    @Nullable
    public String getIconPath() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<UUID, UUID, UUID, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<UUID, UUID, UUID, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return PassionMajorTable.PASSION_MAJOR.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return PassionMajorTable.PASSION_MAJOR.NAME_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return PassionMajorTable.PASSION_MAJOR.DESC_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return PassionMajorTable.PASSION_MAJOR.ICON_PATH;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getNameI18nId();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getDescI18nId();
    }

    @Override
    @Nullable
    public String component4() {
        return getIconPath();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getNameI18nId();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getDescI18nId();
    }

    @Override
    @Nullable
    public String value4() {
        return getIconPath();
    }

    @Override
    @Nonnull
    public PassionMajorRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionMajorRecord value2(@Nullable UUID value) {
        setNameI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionMajorRecord value3(@Nullable UUID value) {
        setDescI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionMajorRecord value4(@Nullable String value) {
        setIconPath(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionMajorRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable UUID value3, @Nullable String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PassionMajorRecord
     */
    public PassionMajorRecord() {
        super(PassionMajorTable.PASSION_MAJOR);
    }

    /**
     * Create a detached, initialised PassionMajorRecord
     */
    @ConstructorProperties({ "id", "nameI18nId", "descI18nId", "iconPath" })
    public PassionMajorRecord(@Nonnull UUID id, @Nullable UUID nameI18nId, @Nullable UUID descI18nId, @Nullable String iconPath) {
        super(PassionMajorTable.PASSION_MAJOR);

        setId(id);
        setNameI18nId(nameI18nId);
        setDescI18nId(descI18nId);
        setIconPath(iconPath);
    }

    /**
     * Create a detached, initialised PassionMajorRecord
     */
    public PassionMajorRecord(PassionMajorPojo value) {
        super(PassionMajorTable.PASSION_MAJOR);

        if (value != null) {
            setId(value.getId());
            setNameI18nId(value.getNameI18nId());
            setDescI18nId(value.getDescI18nId());
            setIconPath(value.getIconPath());
        }
    }
}
