/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.StudentUploadedInterviewTable;
import unid.jooqMono.model.tables.pojos.StudentUploadedInterviewPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class StudentUploadedInterviewRecord extends UpdatableRecordImpl<StudentUploadedInterviewRecord> implements Record14<UUID, UUID, UUID, UUID, String, UUID, UUID, UUID, OffsetDateTime, String, OffsetDateTime, String, String[], String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.student_uploaded_interview.id</code>.
     */
    public StudentUploadedInterviewRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.student_profile_id</code>.
     */
    public StudentUploadedInterviewRecord setStudentProfileId(@Nonnull UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.student_profile_id</code>.
     */
    @NotNull
    @Nonnull
    public UUID getStudentProfileId() {
        return (UUID) get(1);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.interview_topic_id</code>.
     */
    public StudentUploadedInterviewRecord setInterviewTopicId(@Nonnull UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.interview_topic_id</code>.
     */
    @NotNull
    @Nonnull
    public UUID getInterviewTopicId() {
        return (UUID) get(2);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.payment_transaction_id</code>.
     */
    public StudentUploadedInterviewRecord setPaymentTransactionId(@Nonnull UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.payment_transaction_id</code>.
     */
    @NotNull
    @Nonnull
    public UUID getPaymentTransactionId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.student_uploaded_interview.uploaded_file</code>.
     */
    public StudentUploadedInterviewRecord setUploadedFile(@Nullable String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.uploaded_file</code>.
     */
    @Nullable
    public String getUploadedFile() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.content_review_id</code>.
     */
    public StudentUploadedInterviewRecord setContentReviewId(@Nullable UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.content_review_id</code>.
     */
    @Nullable
    public UUID getContentReviewId() {
        return (UUID) get(5);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.clarity_review_id</code>.
     */
    public StudentUploadedInterviewRecord setClarityReviewId(@Nullable UUID value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.clarity_review_id</code>.
     */
    @Nullable
    public UUID getClarityReviewId() {
        return (UUID) get(6);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.charisma_review_id</code>.
     */
    public StudentUploadedInterviewRecord setCharismaReviewId(@Nullable UUID value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.charisma_review_id</code>.
     */
    @Nullable
    public UUID getCharismaReviewId() {
        return (UUID) get(7);
    }

    /**
     * Setter for <code>public.student_uploaded_interview.created_on</code>.
     */
    public StudentUploadedInterviewRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>public.student_uploaded_interview.created_by</code>.
     */
    public StudentUploadedInterviewRecord setCreatedBy(@Nullable String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.student_uploaded_interview.updated_on</code>.
     */
    public StudentUploadedInterviewRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>public.student_uploaded_interview.updated_by</code>.
     */
    public StudentUploadedInterviewRecord setUpdatedBy(@Nullable String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>public.student_uploaded_interview.recommended_activity</code>.
     */
    public StudentUploadedInterviewRecord setRecommendedActivity(@Nullable String[] value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.student_uploaded_interview.recommended_activity</code>.
     */
    @Nullable
    public String[] getRecommendedActivity() {
        return (String[]) get(12);
    }

    /**
     * Setter for <code>public.student_uploaded_interview.recommendation</code>.
     */
    public StudentUploadedInterviewRecord setRecommendation(@Nullable String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.student_uploaded_interview.recommendation</code>.
     */
    @Nullable
    public String getRecommendation() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row14<UUID, UUID, UUID, UUID, String, UUID, UUID, UUID, OffsetDateTime, String, OffsetDateTime, String, String[], String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row14<UUID, UUID, UUID, UUID, String, UUID, UUID, UUID, OffsetDateTime, String, OffsetDateTime, String, String[], String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.STUDENT_PROFILE_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.INTERVIEW_TOPIC_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.PAYMENT_TRANSACTION_ID;
    }

    @Override
    @Nonnull
    public Field<String> field5() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPLOADED_FILE;
    }

    @Override
    @Nonnull
    public Field<UUID> field6() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CONTENT_REVIEW_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field7() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CLARITY_REVIEW_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field8() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CHARISMA_REVIEW_ID;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field9() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field10() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field11() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field12() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPDATED_BY;
    }

    @Override
    @Nonnull
    public Field<String[]> field13() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.RECOMMENDED_ACTIVITY;
    }

    @Override
    @Nonnull
    public Field<String> field14() {
        return StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.RECOMMENDATION;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getStudentProfileId();
    }

    @Override
    @Nonnull
    public UUID component3() {
        return getInterviewTopicId();
    }

    @Override
    @Nonnull
    public UUID component4() {
        return getPaymentTransactionId();
    }

    @Override
    @Nullable
    public String component5() {
        return getUploadedFile();
    }

    @Override
    @Nullable
    public UUID component6() {
        return getContentReviewId();
    }

    @Override
    @Nullable
    public UUID component7() {
        return getClarityReviewId();
    }

    @Override
    @Nullable
    public UUID component8() {
        return getCharismaReviewId();
    }

    @Override
    @Nullable
    public OffsetDateTime component9() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component10() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component11() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component12() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public String[] component13() {
        return getRecommendedActivity();
    }

    @Override
    @Nullable
    public String component14() {
        return getRecommendation();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getStudentProfileId();
    }

    @Override
    @Nonnull
    public UUID value3() {
        return getInterviewTopicId();
    }

    @Override
    @Nonnull
    public UUID value4() {
        return getPaymentTransactionId();
    }

    @Override
    @Nullable
    public String value5() {
        return getUploadedFile();
    }

    @Override
    @Nullable
    public UUID value6() {
        return getContentReviewId();
    }

    @Override
    @Nullable
    public UUID value7() {
        return getClarityReviewId();
    }

    @Override
    @Nullable
    public UUID value8() {
        return getCharismaReviewId();
    }

    @Override
    @Nullable
    public OffsetDateTime value9() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value10() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value11() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value12() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public String[] value13() {
        return getRecommendedActivity();
    }

    @Override
    @Nullable
    public String value14() {
        return getRecommendation();
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value2(@Nonnull UUID value) {
        setStudentProfileId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value3(@Nonnull UUID value) {
        setInterviewTopicId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value4(@Nonnull UUID value) {
        setPaymentTransactionId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value5(@Nullable String value) {
        setUploadedFile(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value6(@Nullable UUID value) {
        setContentReviewId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value7(@Nullable UUID value) {
        setClarityReviewId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value8(@Nullable UUID value) {
        setCharismaReviewId(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value9(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value10(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value11(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value12(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value13(@Nullable String[] value) {
        setRecommendedActivity(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord value14(@Nullable String value) {
        setRecommendation(value);
        return this;
    }

    @Override
    @Nonnull
    public StudentUploadedInterviewRecord values(@Nonnull UUID value1, @Nonnull UUID value2, @Nonnull UUID value3, @Nonnull UUID value4, @Nullable String value5, @Nullable UUID value6, @Nullable UUID value7, @Nullable UUID value8, @Nullable OffsetDateTime value9, @Nullable String value10, @Nullable OffsetDateTime value11, @Nullable String value12, @Nullable String[] value13, @Nullable String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentUploadedInterviewRecord
     */
    public StudentUploadedInterviewRecord() {
        super(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW);
    }

    /**
     * Create a detached, initialised StudentUploadedInterviewRecord
     */
    @ConstructorProperties({ "id", "studentProfileId", "interviewTopicId", "paymentTransactionId", "uploadedFile", "contentReviewId", "clarityReviewId", "charismaReviewId", "createdOn", "createdBy", "updatedOn", "updatedBy", "recommendedActivity", "recommendation" })
    public StudentUploadedInterviewRecord(@Nonnull UUID id, @Nonnull UUID studentProfileId, @Nonnull UUID interviewTopicId, @Nonnull UUID paymentTransactionId, @Nullable String uploadedFile, @Nullable UUID contentReviewId, @Nullable UUID clarityReviewId, @Nullable UUID charismaReviewId, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy, @Nullable String[] recommendedActivity, @Nullable String recommendation) {
        super(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW);

        setId(id);
        setStudentProfileId(studentProfileId);
        setInterviewTopicId(interviewTopicId);
        setPaymentTransactionId(paymentTransactionId);
        setUploadedFile(uploadedFile);
        setContentReviewId(contentReviewId);
        setClarityReviewId(clarityReviewId);
        setCharismaReviewId(charismaReviewId);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
        setRecommendedActivity(recommendedActivity);
        setRecommendation(recommendation);
    }

    /**
     * Create a detached, initialised StudentUploadedInterviewRecord
     */
    public StudentUploadedInterviewRecord(StudentUploadedInterviewPojo value) {
        super(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW);

        if (value != null) {
            setId(value.getId());
            setStudentProfileId(value.getStudentProfileId());
            setInterviewTopicId(value.getInterviewTopicId());
            setPaymentTransactionId(value.getPaymentTransactionId());
            setUploadedFile(value.getUploadedFile());
            setContentReviewId(value.getContentReviewId());
            setClarityReviewId(value.getClarityReviewId());
            setCharismaReviewId(value.getCharismaReviewId());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
            setRecommendedActivity(value.getRecommendedActivity());
            setRecommendation(value.getRecommendation());
        }
    }
}
