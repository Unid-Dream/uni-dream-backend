/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.PassionSubjectPodcastTable;
import unid.jooqMono.model.tables.pojos.PassionSubjectPodcastPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class PassionSubjectPodcastRecord extends UpdatableRecordImpl<PassionSubjectPodcastRecord> implements Record5<UUID, UUID, UUID, String, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.passion_subject_podcast.id</code>.
     */
    public PassionSubjectPodcastRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_subject_podcast.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.passion_subject_podcast.name_i18n_id</code>.
     */
    public PassionSubjectPodcastRecord setNameI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_subject_podcast.name_i18n_id</code>.
     */
    @Nullable
    public UUID getNameI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.passion_subject_podcast.author_i18n_id</code>.
     */
    public PassionSubjectPodcastRecord setAuthorI18nId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_subject_podcast.author_i18n_id</code>.
     */
    @Nullable
    public UUID getAuthorI18nId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.passion_subject_podcast.url</code>.
     */
    public PassionSubjectPodcastRecord setUrl(@Nullable String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_subject_podcast.url</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getUrl() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.passion_subject_podcast.subject_id</code>.
     */
    public PassionSubjectPodcastRecord setSubjectId(@Nullable UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.passion_subject_podcast.subject_id</code>.
     */
    @Nullable
    public UUID getSubjectId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row5<UUID, UUID, UUID, String, UUID> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row5<UUID, UUID, UUID, String, UUID> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST.NAME_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST.AUTHOR_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST.URL;
    }

    @Override
    @Nonnull
    public Field<UUID> field5() {
        return PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST.SUBJECT_ID;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getNameI18nId();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getAuthorI18nId();
    }

    @Override
    @Nullable
    public String component4() {
        return getUrl();
    }

    @Override
    @Nullable
    public UUID component5() {
        return getSubjectId();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getNameI18nId();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getAuthorI18nId();
    }

    @Override
    @Nullable
    public String value4() {
        return getUrl();
    }

    @Override
    @Nullable
    public UUID value5() {
        return getSubjectId();
    }

    @Override
    @Nonnull
    public PassionSubjectPodcastRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionSubjectPodcastRecord value2(@Nullable UUID value) {
        setNameI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionSubjectPodcastRecord value3(@Nullable UUID value) {
        setAuthorI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionSubjectPodcastRecord value4(@Nullable String value) {
        setUrl(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionSubjectPodcastRecord value5(@Nullable UUID value) {
        setSubjectId(value);
        return this;
    }

    @Override
    @Nonnull
    public PassionSubjectPodcastRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable UUID value3, @Nullable String value4, @Nullable UUID value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PassionSubjectPodcastRecord
     */
    public PassionSubjectPodcastRecord() {
        super(PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST);
    }

    /**
     * Create a detached, initialised PassionSubjectPodcastRecord
     */
    @ConstructorProperties({ "id", "nameI18nId", "authorI18nId", "url", "subjectId" })
    public PassionSubjectPodcastRecord(@Nonnull UUID id, @Nullable UUID nameI18nId, @Nullable UUID authorI18nId, @Nullable String url, @Nullable UUID subjectId) {
        super(PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST);

        setId(id);
        setNameI18nId(nameI18nId);
        setAuthorI18nId(authorI18nId);
        setUrl(url);
        setSubjectId(subjectId);
    }

    /**
     * Create a detached, initialised PassionSubjectPodcastRecord
     */
    public PassionSubjectPodcastRecord(PassionSubjectPodcastPojo value) {
        super(PassionSubjectPodcastTable.PASSION_SUBJECT_PODCAST);

        if (value != null) {
            setId(value.getId());
            setNameI18nId(value.getNameI18nId());
            setAuthorI18nId(value.getAuthorI18nId());
            setUrl(value.getUrl());
            setSubjectId(value.getSubjectId());
        }
    }
}
