/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentProfilePredictedGradeTable;
import unid.jooqMono.model.tables.pojos.StudentProfilePredictedGradePojo;
import unid.jooqMono.model.tables.records.StudentProfilePredictedGradeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentProfilePredictedGradeDao extends DAOImpl<StudentProfilePredictedGradeRecord, StudentProfilePredictedGradePojo, UUID> {

    /**
     * Create a new StudentProfilePredictedGradeDao without any configuration
     */
    public StudentProfilePredictedGradeDao() {
        super(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE, StudentProfilePredictedGradePojo.class);
    }

    /**
     * Create a new StudentProfilePredictedGradeDao with an attached
     * configuration
     */
    public StudentProfilePredictedGradeDao(Configuration configuration) {
        super(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE, StudentProfilePredictedGradePojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentProfilePredictedGradePojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchById(UUID... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentProfilePredictedGradePojo fetchOneById(UUID value) {
        return fetchOne(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.ID, value);
    }

    /**
     * Fetch records that have <code>student_profile_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfStudentProfileId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.STUDENT_PROFILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_profile_id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByStudentProfileId(UUID... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.STUDENT_PROFILE_ID, values);
    }

    /**
     * Fetch records that have <code>academic_subject_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfAcademicSubjectId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.ACADEMIC_SUBJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>academic_subject_id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByAcademicSubjectId(UUID... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.ACADEMIC_SUBJECT_ID, values);
    }

    /**
     * Fetch records that have <code>grade BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfGrade(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.GRADE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>grade IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByGrade(String... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.GRADE, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByCreatedBy(String... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentProfilePredictedGradePojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentProfilePredictedGradeTable.STUDENT_PROFILE_PREDICTED_GRADE.UPDATED_BY, values);
    }
}
