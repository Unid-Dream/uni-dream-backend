/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.EducatorSchoolTable;
import unid.jooqMono.model.tables.pojos.EducatorSchoolPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class EducatorSchoolRecord extends UpdatableRecordImpl<EducatorSchoolRecord> implements Record4<UUID, UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.educator_school.id</code>.
     */
    public EducatorSchoolRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.educator_school.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.educator_school.university_id</code>.
     */
    public EducatorSchoolRecord setUniversityId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.educator_school.university_id</code>.
     */
    @Nullable
    public UUID getUniversityId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.educator_school.degree_id</code>.
     */
    public EducatorSchoolRecord setDegreeId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.educator_school.degree_id</code>.
     */
    @Nullable
    public UUID getDegreeId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.educator_school.educator_profile_id</code>.
     */
    public EducatorSchoolRecord setEducatorProfileId(@Nullable UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.educator_school.educator_profile_id</code>.
     */
    @Nullable
    public UUID getEducatorProfileId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<UUID, UUID, UUID, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<UUID, UUID, UUID, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return EducatorSchoolTable.EDUCATOR_SCHOOL.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return EducatorSchoolTable.EDUCATOR_SCHOOL.UNIVERSITY_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return EducatorSchoolTable.EDUCATOR_SCHOOL.DEGREE_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return EducatorSchoolTable.EDUCATOR_SCHOOL.EDUCATOR_PROFILE_ID;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getUniversityId();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getDegreeId();
    }

    @Override
    @Nullable
    public UUID component4() {
        return getEducatorProfileId();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getUniversityId();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getDegreeId();
    }

    @Override
    @Nullable
    public UUID value4() {
        return getEducatorProfileId();
    }

    @Override
    @Nonnull
    public EducatorSchoolRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public EducatorSchoolRecord value2(@Nullable UUID value) {
        setUniversityId(value);
        return this;
    }

    @Override
    @Nonnull
    public EducatorSchoolRecord value3(@Nullable UUID value) {
        setDegreeId(value);
        return this;
    }

    @Override
    @Nonnull
    public EducatorSchoolRecord value4(@Nullable UUID value) {
        setEducatorProfileId(value);
        return this;
    }

    @Override
    @Nonnull
    public EducatorSchoolRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable UUID value3, @Nullable UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EducatorSchoolRecord
     */
    public EducatorSchoolRecord() {
        super(EducatorSchoolTable.EDUCATOR_SCHOOL);
    }

    /**
     * Create a detached, initialised EducatorSchoolRecord
     */
    @ConstructorProperties({ "id", "universityId", "degreeId", "educatorProfileId" })
    public EducatorSchoolRecord(@Nonnull UUID id, @Nullable UUID universityId, @Nullable UUID degreeId, @Nullable UUID educatorProfileId) {
        super(EducatorSchoolTable.EDUCATOR_SCHOOL);

        setId(id);
        setUniversityId(universityId);
        setDegreeId(degreeId);
        setEducatorProfileId(educatorProfileId);
    }

    /**
     * Create a detached, initialised EducatorSchoolRecord
     */
    public EducatorSchoolRecord(EducatorSchoolPojo value) {
        super(EducatorSchoolTable.EDUCATOR_SCHOOL);

        if (value != null) {
            setId(value.getId());
            setUniversityId(value.getUniversityId());
            setDegreeId(value.getDegreeId());
            setEducatorProfileId(value.getEducatorProfileId());
        }
    }
}
