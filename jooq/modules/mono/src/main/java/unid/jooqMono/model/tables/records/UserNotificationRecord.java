/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.enums.UserNotificationTypeEnum;
import unid.jooqMono.model.tables.UserNotificationTable;
import unid.jooqMono.model.tables.pojos.UserNotificationPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class UserNotificationRecord extends UpdatableRecordImpl<UserNotificationRecord> implements Record9<UUID, UUID, UserNotificationTypeEnum, UUID, Boolean, OffsetDateTime, String, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_notification.id</code>.
     */
    public UserNotificationRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user_notification.owner_user_id</code>.
     */
    public UserNotificationRecord setOwnerUserId(@Nonnull UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.owner_user_id</code>.
     */
    @NotNull
    @Nonnull
    public UUID getOwnerUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.user_notification.notification_type</code>.
     */
    public UserNotificationRecord setNotificationType(@Nonnull UserNotificationTypeEnum value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.notification_type</code>.
     */
    @NotNull
    @Nonnull
    public UserNotificationTypeEnum getNotificationType() {
        return (UserNotificationTypeEnum) get(2);
    }

    /**
     * Setter for <code>public.user_notification.notification_ref_id</code>.
     */
    public UserNotificationRecord setNotificationRefId(@Nullable UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.notification_ref_id</code>.
     */
    @Nullable
    public UUID getNotificationRefId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.user_notification.read</code>.
     */
    public UserNotificationRecord setRead(@Nullable Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.read</code>.
     */
    @Nullable
    public Boolean getRead() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.user_notification.created_on</code>.
     */
    public UserNotificationRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.user_notification.created_by</code>.
     */
    public UserNotificationRecord setCreatedBy(@Nullable String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.user_notification.updated_on</code>.
     */
    public UserNotificationRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.user_notification.updated_by</code>.
     */
    public UserNotificationRecord setUpdatedBy(@Nullable String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notification.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row9<UUID, UUID, UserNotificationTypeEnum, UUID, Boolean, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row9<UUID, UUID, UserNotificationTypeEnum, UUID, Boolean, OffsetDateTime, String, OffsetDateTime, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return UserNotificationTable.USER_NOTIFICATION.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return UserNotificationTable.USER_NOTIFICATION.OWNER_USER_ID;
    }

    @Override
    @Nonnull
    public Field<UserNotificationTypeEnum> field3() {
        return UserNotificationTable.USER_NOTIFICATION.NOTIFICATION_TYPE;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return UserNotificationTable.USER_NOTIFICATION.NOTIFICATION_REF_ID;
    }

    @Override
    @Nonnull
    public Field<Boolean> field5() {
        return UserNotificationTable.USER_NOTIFICATION.READ;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field6() {
        return UserNotificationTable.USER_NOTIFICATION.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field7() {
        return UserNotificationTable.USER_NOTIFICATION.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field8() {
        return UserNotificationTable.USER_NOTIFICATION.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field9() {
        return UserNotificationTable.USER_NOTIFICATION.UPDATED_BY;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getOwnerUserId();
    }

    @Override
    @Nonnull
    public UserNotificationTypeEnum component3() {
        return getNotificationType();
    }

    @Override
    @Nullable
    public UUID component4() {
        return getNotificationRefId();
    }

    @Override
    @Nullable
    public Boolean component5() {
        return getRead();
    }

    @Override
    @Nullable
    public OffsetDateTime component6() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component7() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component8() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component9() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getOwnerUserId();
    }

    @Override
    @Nonnull
    public UserNotificationTypeEnum value3() {
        return getNotificationType();
    }

    @Override
    @Nullable
    public UUID value4() {
        return getNotificationRefId();
    }

    @Override
    @Nullable
    public Boolean value5() {
        return getRead();
    }

    @Override
    @Nullable
    public OffsetDateTime value6() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value7() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value8() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value9() {
        return getUpdatedBy();
    }

    @Override
    @Nonnull
    public UserNotificationRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value2(@Nonnull UUID value) {
        setOwnerUserId(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value3(@Nonnull UserNotificationTypeEnum value) {
        setNotificationType(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value4(@Nullable UUID value) {
        setNotificationRefId(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value5(@Nullable Boolean value) {
        setRead(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value6(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value7(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value8(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord value9(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public UserNotificationRecord values(@Nonnull UUID value1, @Nonnull UUID value2, @Nonnull UserNotificationTypeEnum value3, @Nullable UUID value4, @Nullable Boolean value5, @Nullable OffsetDateTime value6, @Nullable String value7, @Nullable OffsetDateTime value8, @Nullable String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserNotificationRecord
     */
    public UserNotificationRecord() {
        super(UserNotificationTable.USER_NOTIFICATION);
    }

    /**
     * Create a detached, initialised UserNotificationRecord
     */
    @ConstructorProperties({ "id", "ownerUserId", "notificationType", "notificationRefId", "read", "createdOn", "createdBy", "updatedOn", "updatedBy" })
    public UserNotificationRecord(@Nonnull UUID id, @Nonnull UUID ownerUserId, @Nonnull UserNotificationTypeEnum notificationType, @Nullable UUID notificationRefId, @Nullable Boolean read, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy) {
        super(UserNotificationTable.USER_NOTIFICATION);

        setId(id);
        setOwnerUserId(ownerUserId);
        setNotificationType(notificationType);
        setNotificationRefId(notificationRefId);
        setRead(read);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised UserNotificationRecord
     */
    public UserNotificationRecord(UserNotificationPojo value) {
        super(UserNotificationTable.USER_NOTIFICATION);

        if (value != null) {
            setId(value.getId());
            setOwnerUserId(value.getOwnerUserId());
            setNotificationType(value.getNotificationType());
            setNotificationRefId(value.getNotificationRefId());
            setRead(value.getRead());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
        }
    }
}
