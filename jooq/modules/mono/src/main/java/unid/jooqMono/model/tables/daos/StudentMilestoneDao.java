/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentMilestoneTable;
import unid.jooqMono.model.tables.pojos.StudentMilestonePojo;
import unid.jooqMono.model.tables.records.StudentMilestoneRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentMilestoneDao extends DAOImpl<StudentMilestoneRecord, StudentMilestonePojo, UUID> {

    /**
     * Create a new StudentMilestoneDao without any configuration
     */
    public StudentMilestoneDao() {
        super(StudentMilestoneTable.STUDENT_MILESTONE, StudentMilestonePojo.class);
    }

    /**
     * Create a new StudentMilestoneDao with an attached configuration
     */
    public StudentMilestoneDao(Configuration configuration) {
        super(StudentMilestoneTable.STUDENT_MILESTONE, StudentMilestonePojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentMilestonePojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentMilestonePojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentMilestoneTable.STUDENT_MILESTONE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentMilestonePojo> fetchById(UUID... values) {
        return fetch(StudentMilestoneTable.STUDENT_MILESTONE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentMilestonePojo fetchOneById(UUID value) {
        return fetchOne(StudentMilestoneTable.STUDENT_MILESTONE.ID, value);
    }

    /**
     * Fetch records that have <code>questionnaire BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentMilestonePojo> fetchRangeOfQuestionnaire(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(StudentMilestoneTable.STUDENT_MILESTONE.QUESTIONNAIRE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>questionnaire IN (values)</code>
     */
    @Nonnull
    public List<StudentMilestonePojo> fetchByQuestionnaire(JSONB... values) {
        return fetch(StudentMilestoneTable.STUDENT_MILESTONE.QUESTIONNAIRE, values);
    }
}
