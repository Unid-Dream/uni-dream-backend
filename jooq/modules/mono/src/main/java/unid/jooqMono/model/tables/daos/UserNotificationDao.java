/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.enums.UserNotificationTypeEnum;
import unid.jooqMono.model.tables.UserNotificationTable;
import unid.jooqMono.model.tables.pojos.UserNotificationPojo;
import unid.jooqMono.model.tables.records.UserNotificationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserNotificationDao extends DAOImpl<UserNotificationRecord, UserNotificationPojo, UUID> {

    /**
     * Create a new UserNotificationDao without any configuration
     */
    public UserNotificationDao() {
        super(UserNotificationTable.USER_NOTIFICATION, UserNotificationPojo.class);
    }

    /**
     * Create a new UserNotificationDao with an attached configuration
     */
    public UserNotificationDao(Configuration configuration) {
        super(UserNotificationTable.USER_NOTIFICATION, UserNotificationPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(UserNotificationPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchById(UUID... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public UserNotificationPojo fetchOneById(UUID value) {
        return fetchOne(UserNotificationTable.USER_NOTIFICATION.ID, value);
    }

    /**
     * Fetch records that have <code>owner_user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfOwnerUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.OWNER_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner_user_id IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByOwnerUserId(UUID... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.OWNER_USER_ID, values);
    }

    /**
     * Fetch records that have <code>notification_type BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfNotificationType(UserNotificationTypeEnum lowerInclusive, UserNotificationTypeEnum upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.NOTIFICATION_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notification_type IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByNotificationType(UserNotificationTypeEnum... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.NOTIFICATION_TYPE, values);
    }

    /**
     * Fetch records that have <code>notification_ref_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfNotificationRefId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.NOTIFICATION_REF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notification_ref_id IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByNotificationRefId(UUID... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.NOTIFICATION_REF_ID, values);
    }

    /**
     * Fetch records that have <code>read BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfRead(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.READ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>read IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByRead(Boolean... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.READ, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByCreatedBy(String... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserNotificationTable.USER_NOTIFICATION.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<UserNotificationPojo> fetchByUpdatedBy(String... values) {
        return fetch(UserNotificationTable.USER_NOTIFICATION.UPDATED_BY, values);
    }
}
