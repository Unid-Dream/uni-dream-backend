/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.records;


import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import unid.jooqMono.model.tables.AcademicMajorTable;
import unid.jooqMono.model.tables.pojos.AcademicMajorPojo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class AcademicMajorRecord extends UpdatableRecordImpl<AcademicMajorRecord> implements Record11<UUID, UUID, UUID, UUID, OffsetDateTime, String, OffsetDateTime, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.academic_major.id</code>.
     */
    public AcademicMajorRecord setId(@Nonnull UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.academic_major.title_i18n_id</code>.
     */
    public AcademicMajorRecord setTitleI18nId(@Nullable UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.title_i18n_id</code>.
     */
    @Nullable
    public UUID getTitleI18nId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.academic_major.description_i18n_id</code>.
     */
    public AcademicMajorRecord setDescriptionI18nId(@Nullable UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.description_i18n_id</code>.
     */
    @Nullable
    public UUID getDescriptionI18nId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.academic_major.tag_id</code>.
     */
    public AcademicMajorRecord setTagId(@Nullable UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.tag_id</code>.
     */
    @Nullable
    public UUID getTagId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.academic_major.created_on</code>.
     */
    public AcademicMajorRecord setCreatedOn(@Nullable OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.academic_major.created_by</code>.
     */
    public AcademicMajorRecord setCreatedBy(@Nullable String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.academic_major.updated_on</code>.
     */
    public AcademicMajorRecord setUpdatedOn(@Nullable OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.academic_major.updated_by</code>.
     */
    public AcademicMajorRecord setUpdatedBy(@Nullable String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.academic_major.icon_path</code>.
     */
    public AcademicMajorRecord setIconPath(@Nullable String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.icon_path</code>.
     */
    @Size(max = 225)
    @Nullable
    public String getIconPath() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.academic_major.serial_number</code>.
     */
    public AcademicMajorRecord setSerialNumber(@Nullable String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major.serial_number</code>.
     */
    @Size(max = 100)
    @Nullable
    public String getSerialNumber() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.academic_major._deleted</code>.
     */
    public AcademicMajorRecord set_Deleted(@Nullable Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.academic_major._deleted</code>.
     */
    @Nullable
    public Boolean get_Deleted() {
        return (Boolean) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row11<UUID, UUID, UUID, UUID, OffsetDateTime, String, OffsetDateTime, String, String, String, Boolean> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row11<UUID, UUID, UUID, UUID, OffsetDateTime, String, OffsetDateTime, String, String, String, Boolean> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return AcademicMajorTable.ACADEMIC_MAJOR.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return AcademicMajorTable.ACADEMIC_MAJOR.TITLE_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field3() {
        return AcademicMajorTable.ACADEMIC_MAJOR.DESCRIPTION_I18N_ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field4() {
        return AcademicMajorTable.ACADEMIC_MAJOR.TAG_ID;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field5() {
        return AcademicMajorTable.ACADEMIC_MAJOR.CREATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field6() {
        return AcademicMajorTable.ACADEMIC_MAJOR.CREATED_BY;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field7() {
        return AcademicMajorTable.ACADEMIC_MAJOR.UPDATED_ON;
    }

    @Override
    @Nonnull
    public Field<String> field8() {
        return AcademicMajorTable.ACADEMIC_MAJOR.UPDATED_BY;
    }

    @Override
    @Nonnull
    public Field<String> field9() {
        return AcademicMajorTable.ACADEMIC_MAJOR.ICON_PATH;
    }

    @Override
    @Nonnull
    public Field<String> field10() {
        return AcademicMajorTable.ACADEMIC_MAJOR.SERIAL_NUMBER;
    }

    @Override
    @Nonnull
    public Field<Boolean> field11() {
        return AcademicMajorTable.ACADEMIC_MAJOR._DELETED;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID component2() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public UUID component3() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public UUID component4() {
        return getTagId();
    }

    @Override
    @Nullable
    public OffsetDateTime component5() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String component6() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime component7() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String component8() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public String component9() {
        return getIconPath();
    }

    @Override
    @Nullable
    public String component10() {
        return getSerialNumber();
    }

    @Override
    @Nullable
    public Boolean component11() {
        return get_Deleted();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nullable
    public UUID value2() {
        return getTitleI18nId();
    }

    @Override
    @Nullable
    public UUID value3() {
        return getDescriptionI18nId();
    }

    @Override
    @Nullable
    public UUID value4() {
        return getTagId();
    }

    @Override
    @Nullable
    public OffsetDateTime value5() {
        return getCreatedOn();
    }

    @Override
    @Nullable
    public String value6() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public OffsetDateTime value7() {
        return getUpdatedOn();
    }

    @Override
    @Nullable
    public String value8() {
        return getUpdatedBy();
    }

    @Override
    @Nullable
    public String value9() {
        return getIconPath();
    }

    @Override
    @Nullable
    public String value10() {
        return getSerialNumber();
    }

    @Override
    @Nullable
    public Boolean value11() {
        return get_Deleted();
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value2(@Nullable UUID value) {
        setTitleI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value3(@Nullable UUID value) {
        setDescriptionI18nId(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value4(@Nullable UUID value) {
        setTagId(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value5(@Nullable OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value6(@Nullable String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value7(@Nullable OffsetDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value8(@Nullable String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value9(@Nullable String value) {
        setIconPath(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value10(@Nullable String value) {
        setSerialNumber(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord value11(@Nullable Boolean value) {
        set_Deleted(value);
        return this;
    }

    @Override
    @Nonnull
    public AcademicMajorRecord values(@Nonnull UUID value1, @Nullable UUID value2, @Nullable UUID value3, @Nullable UUID value4, @Nullable OffsetDateTime value5, @Nullable String value6, @Nullable OffsetDateTime value7, @Nullable String value8, @Nullable String value9, @Nullable String value10, @Nullable Boolean value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AcademicMajorRecord
     */
    public AcademicMajorRecord() {
        super(AcademicMajorTable.ACADEMIC_MAJOR);
    }

    /**
     * Create a detached, initialised AcademicMajorRecord
     */
    @ConstructorProperties({ "id", "titleI18nId", "descriptionI18nId", "tagId", "createdOn", "createdBy", "updatedOn", "updatedBy", "iconPath", "serialNumber", "_Deleted" })
    public AcademicMajorRecord(@Nonnull UUID id, @Nullable UUID titleI18nId, @Nullable UUID descriptionI18nId, @Nullable UUID tagId, @Nullable OffsetDateTime createdOn, @Nullable String createdBy, @Nullable OffsetDateTime updatedOn, @Nullable String updatedBy, @Nullable String iconPath, @Nullable String serialNumber, @Nullable Boolean _Deleted) {
        super(AcademicMajorTable.ACADEMIC_MAJOR);

        setId(id);
        setTitleI18nId(titleI18nId);
        setDescriptionI18nId(descriptionI18nId);
        setTagId(tagId);
        setCreatedOn(createdOn);
        setCreatedBy(createdBy);
        setUpdatedOn(updatedOn);
        setUpdatedBy(updatedBy);
        setIconPath(iconPath);
        setSerialNumber(serialNumber);
        set_Deleted(_Deleted);
    }

    /**
     * Create a detached, initialised AcademicMajorRecord
     */
    public AcademicMajorRecord(AcademicMajorPojo value) {
        super(AcademicMajorTable.ACADEMIC_MAJOR);

        if (value != null) {
            setId(value.getId());
            setTitleI18nId(value.getTitleI18nId());
            setDescriptionI18nId(value.getDescriptionI18nId());
            setTagId(value.getTagId());
            setCreatedOn(value.getCreatedOn());
            setCreatedBy(value.getCreatedBy());
            setUpdatedOn(value.getUpdatedOn());
            setUpdatedBy(value.getUpdatedBy());
            setIconPath(value.getIconPath());
            setSerialNumber(value.getSerialNumber());
            set_Deleted(value.get_Deleted());
        }
    }
}
