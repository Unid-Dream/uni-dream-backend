/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentUploadedInterviewTable;
import unid.jooqMono.model.tables.pojos.StudentUploadedInterviewPojo;
import unid.jooqMono.model.tables.records.StudentUploadedInterviewRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentUploadedInterviewDao extends DAOImpl<StudentUploadedInterviewRecord, StudentUploadedInterviewPojo, UUID> {

    /**
     * Create a new StudentUploadedInterviewDao without any configuration
     */
    public StudentUploadedInterviewDao() {
        super(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW, StudentUploadedInterviewPojo.class);
    }

    /**
     * Create a new StudentUploadedInterviewDao with an attached configuration
     */
    public StudentUploadedInterviewDao(Configuration configuration) {
        super(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW, StudentUploadedInterviewPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentUploadedInterviewPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchById(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentUploadedInterviewPojo fetchOneById(UUID value) {
        return fetchOne(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.ID, value);
    }

    /**
     * Fetch records that have <code>student_profile_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfStudentProfileId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.STUDENT_PROFILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_profile_id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByStudentProfileId(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.STUDENT_PROFILE_ID, values);
    }

    /**
     * Fetch records that have <code>interview_topic_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfInterviewTopicId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.INTERVIEW_TOPIC_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>interview_topic_id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByInterviewTopicId(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.INTERVIEW_TOPIC_ID, values);
    }

    /**
     * Fetch records that have <code>payment_transaction_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfPaymentTransactionId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.PAYMENT_TRANSACTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_transaction_id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByPaymentTransactionId(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.PAYMENT_TRANSACTION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>payment_transaction_id =
     * value</code>
     */
    @Nullable
    public StudentUploadedInterviewPojo fetchOneByPaymentTransactionId(UUID value) {
        return fetchOne(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.PAYMENT_TRANSACTION_ID, value);
    }

    /**
     * Fetch records that have <code>uploaded_file BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfUploadedFile(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPLOADED_FILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uploaded_file IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByUploadedFile(String... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPLOADED_FILE, values);
    }

    /**
     * Fetch records that have <code>content_review_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfContentReviewId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CONTENT_REVIEW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content_review_id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByContentReviewId(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CONTENT_REVIEW_ID, values);
    }

    /**
     * Fetch records that have <code>clarity_review_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfClarityReviewId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CLARITY_REVIEW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>clarity_review_id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByClarityReviewId(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CLARITY_REVIEW_ID, values);
    }

    /**
     * Fetch records that have <code>charisma_review_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfCharismaReviewId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CHARISMA_REVIEW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>charisma_review_id IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByCharismaReviewId(UUID... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CHARISMA_REVIEW_ID, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByCreatedBy(String... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>recommended_activity BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfRecommendedActivity(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.RECOMMENDED_ACTIVITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>recommended_activity IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByRecommendedActivity(String[]... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.RECOMMENDED_ACTIVITY, values);
    }

    /**
     * Fetch records that have <code>recommendation BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchRangeOfRecommendation(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.RECOMMENDATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>recommendation IN (values)</code>
     */
    @Nonnull
    public List<StudentUploadedInterviewPojo> fetchByRecommendation(String... values) {
        return fetch(StudentUploadedInterviewTable.STUDENT_UPLOADED_INTERVIEW.RECOMMENDATION, values);
    }
}
