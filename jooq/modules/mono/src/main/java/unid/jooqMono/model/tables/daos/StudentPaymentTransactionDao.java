/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.enums.BookingStatusEnum;
import unid.jooqMono.model.enums.CurrencyEnum;
import unid.jooqMono.model.enums.PaymentMethodEnum;
import unid.jooqMono.model.enums.PaymentStatusEnum;
import unid.jooqMono.model.enums.StudentTransactionItemEnum;
import unid.jooqMono.model.tables.StudentPaymentTransactionTable;
import unid.jooqMono.model.tables.pojos.StudentPaymentTransactionPojo;
import unid.jooqMono.model.tables.records.StudentPaymentTransactionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentPaymentTransactionDao extends DAOImpl<StudentPaymentTransactionRecord, StudentPaymentTransactionPojo, UUID> {

    /**
     * Create a new StudentPaymentTransactionDao without any configuration
     */
    public StudentPaymentTransactionDao() {
        super(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION, StudentPaymentTransactionPojo.class);
    }

    /**
     * Create a new StudentPaymentTransactionDao with an attached configuration
     */
    public StudentPaymentTransactionDao(Configuration configuration) {
        super(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION, StudentPaymentTransactionPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentPaymentTransactionPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchById(UUID... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentPaymentTransactionPojo fetchOneById(UUID value) {
        return fetchOne(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.ID, value);
    }

    /**
     * Fetch records that have <code>student_profile_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfStudentProfileId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.STUDENT_PROFILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_profile_id IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByStudentProfileId(UUID... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.STUDENT_PROFILE_ID, values);
    }

    /**
     * Fetch records that have <code>transaction_amount BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_amount IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionAmount(BigDecimal... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>transaction_currency BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionCurrency(CurrencyEnum lowerInclusive, CurrencyEnum upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_CURRENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_currency IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionCurrency(CurrencyEnum... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_CURRENCY, values);
    }

    /**
     * Fetch records that have <code>transaction_item BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionItem(StudentTransactionItemEnum lowerInclusive, StudentTransactionItemEnum upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_ITEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_item IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionItem(StudentTransactionItemEnum... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_ITEM, values);
    }

    /**
     * Fetch records that have <code>transaction_item_ref_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionItemRefId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_ITEM_REF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_item_ref_id IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionItemRefId(UUID... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_ITEM_REF_ID, values);
    }

    /**
     * Fetch records that have <code>transaction_personnel_ref_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionPersonnelRefId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_PERSONNEL_REF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_personnel_ref_id IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionPersonnelRefId(UUID... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_PERSONNEL_REF_ID, values);
    }

    /**
     * Fetch records that have <code>payment_method BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfPaymentMethod(PaymentMethodEnum lowerInclusive, PaymentMethodEnum upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.PAYMENT_METHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_method IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByPaymentMethod(PaymentMethodEnum... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.PAYMENT_METHOD, values);
    }

    /**
     * Fetch records that have <code>payment_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfPaymentStatus(PaymentStatusEnum lowerInclusive, PaymentStatusEnum upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.PAYMENT_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_status IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByPaymentStatus(PaymentStatusEnum... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.PAYMENT_STATUS, values);
    }

    /**
     * Fetch records that have <code>cod_order_ref BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodOrderRef(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_ORDER_REF, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_order_ref IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodOrderRef(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_ORDER_REF, values);
    }

    /**
     * Fetch records that have <code>cod_out_trade_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodOutTradeNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_OUT_TRADE_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_out_trade_no IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodOutTradeNo(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_OUT_TRADE_NO, values);
    }

    /**
     * Fetch records that have <code>cod_ref_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodRefId(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_REF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_ref_id IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodRefId(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_REF_ID, values);
    }

    /**
     * Fetch records that have <code>cod_transaction_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodTransactionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_TRANSACTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_transaction_id IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodTransactionId(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>cod_wallet BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodWallet(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_WALLET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_wallet IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodWallet(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_WALLET, values);
    }

    /**
     * Fetch records that have <code>cod_expiry BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodExpiry(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_EXPIRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_expiry IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodExpiry(OffsetDateTime... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_EXPIRY, values);
    }

    /**
     * Fetch records that have <code>cod_payment_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCodPaymentUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_PAYMENT_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cod_payment_url IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCodPaymentUrl(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.COD_PAYMENT_URL, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByCreatedBy(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>transaction_submit_time BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionSubmitTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_SUBMIT_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_submit_time IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionSubmitTime(LocalDateTime... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_SUBMIT_TIME, values);
    }

    /**
     * Fetch records that have <code>process_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfProcessStatus(BookingStatusEnum lowerInclusive, BookingStatusEnum upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.PROCESS_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>process_status IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByProcessStatus(BookingStatusEnum... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.PROCESS_STATUS, values);
    }

    /**
     * Fetch records that have <code>reject_reason BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfRejectReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.REJECT_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reject_reason IN (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByRejectReason(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.REJECT_REASON, values);
    }

    /**
     * Fetch records that have <code>transaction_serial_number BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchRangeOfTransactionSerialNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_SERIAL_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_serial_number IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentPaymentTransactionPojo> fetchByTransactionSerialNumber(String... values) {
        return fetch(StudentPaymentTransactionTable.STUDENT_PAYMENT_TRANSACTION.TRANSACTION_SERIAL_NUMBER, values);
    }
}
