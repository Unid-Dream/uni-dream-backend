/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import unid.jooqMono.model.enums.ScheduleEventTypeEnum;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class EventScheduleTimePojo implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID                  id;
    private LocalDateTime         startTime;
    private LocalDateTime         endTime;
    private UUID                  refEventId;
    private ScheduleEventTypeEnum eventType;

    public EventScheduleTimePojo() {}

    public EventScheduleTimePojo(EventScheduleTimePojo value) {
        this.id = value.id;
        this.startTime = value.startTime;
        this.endTime = value.endTime;
        this.refEventId = value.refEventId;
        this.eventType = value.eventType;
    }

    @ConstructorProperties({ "id", "startTime", "endTime", "refEventId", "eventType" })
    public EventScheduleTimePojo(
        @Nonnull UUID                  id,
        @Nullable LocalDateTime         startTime,
        @Nullable LocalDateTime         endTime,
        @Nullable UUID                  refEventId,
        @Nonnull ScheduleEventTypeEnum eventType
    ) {
        this.id = id;
        this.startTime = startTime;
        this.endTime = endTime;
        this.refEventId = refEventId;
        this.eventType = eventType;
    }

    /**
     * Getter for <code>public.event_schedule_time.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.event_schedule_time.id</code>.
     */
    public EventScheduleTimePojo setId(@Nonnull UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.event_schedule_time.start_time</code>.
     */
    @Nullable
    public LocalDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Setter for <code>public.event_schedule_time.start_time</code>.
     */
    public EventScheduleTimePojo setStartTime(@Nullable LocalDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Getter for <code>public.event_schedule_time.end_time</code>.
     */
    @Nullable
    public LocalDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Setter for <code>public.event_schedule_time.end_time</code>.
     */
    public EventScheduleTimePojo setEndTime(@Nullable LocalDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Getter for <code>public.event_schedule_time.ref_event_id</code>.
     */
    @Nullable
    public UUID getRefEventId() {
        return this.refEventId;
    }

    /**
     * Setter for <code>public.event_schedule_time.ref_event_id</code>.
     */
    public EventScheduleTimePojo setRefEventId(@Nullable UUID refEventId) {
        this.refEventId = refEventId;
        return this;
    }

    /**
     * Getter for <code>public.event_schedule_time.event_type</code>.
     */
    @NotNull
    @Nonnull
    public ScheduleEventTypeEnum getEventType() {
        return this.eventType;
    }

    /**
     * Setter for <code>public.event_schedule_time.event_type</code>.
     */
    public EventScheduleTimePojo setEventType(@Nonnull ScheduleEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EventScheduleTimePojo (");

        sb.append(id);
        sb.append(", ").append(startTime);
        sb.append(", ").append(endTime);
        sb.append(", ").append(refEventId);
        sb.append(", ").append(eventType);

        sb.append(")");
        return sb.toString();
    }
}
