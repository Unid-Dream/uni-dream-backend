/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import unid.jooqMono.model.enums.UserNotificationTypeEnum;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@lombok.experimental.FieldNameConstants(innerTypeName = "Columns")
public class UserNotificationPojo implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID                     id;
    private UUID                     ownerUserId;
    private UserNotificationTypeEnum notificationType;
    private UUID                     notificationRefId;
    private Boolean                  read;
    private OffsetDateTime           createdOn;
    private String                   createdBy;
    private OffsetDateTime           updatedOn;
    private String                   updatedBy;

    public UserNotificationPojo() {}

    public UserNotificationPojo(UserNotificationPojo value) {
        this.id = value.id;
        this.ownerUserId = value.ownerUserId;
        this.notificationType = value.notificationType;
        this.notificationRefId = value.notificationRefId;
        this.read = value.read;
        this.createdOn = value.createdOn;
        this.createdBy = value.createdBy;
        this.updatedOn = value.updatedOn;
        this.updatedBy = value.updatedBy;
    }

    @ConstructorProperties({ "id", "ownerUserId", "notificationType", "notificationRefId", "read", "createdOn", "createdBy", "updatedOn", "updatedBy" })
    public UserNotificationPojo(
        @Nonnull UUID                     id,
        @Nonnull UUID                     ownerUserId,
        @Nonnull UserNotificationTypeEnum notificationType,
        @Nullable UUID                     notificationRefId,
        @Nullable Boolean                  read,
        @Nullable OffsetDateTime           createdOn,
        @Nullable String                   createdBy,
        @Nullable OffsetDateTime           updatedOn,
        @Nullable String                   updatedBy
    ) {
        this.id = id;
        this.ownerUserId = ownerUserId;
        this.notificationType = notificationType;
        this.notificationRefId = notificationRefId;
        this.read = read;
        this.createdOn = createdOn;
        this.createdBy = createdBy;
        this.updatedOn = updatedOn;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>public.user_notification.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.user_notification.id</code>.
     */
    public UserNotificationPojo setId(@Nonnull UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.owner_user_id</code>.
     */
    @NotNull
    @Nonnull
    public UUID getOwnerUserId() {
        return this.ownerUserId;
    }

    /**
     * Setter for <code>public.user_notification.owner_user_id</code>.
     */
    public UserNotificationPojo setOwnerUserId(@Nonnull UUID ownerUserId) {
        this.ownerUserId = ownerUserId;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.notification_type</code>.
     */
    @NotNull
    @Nonnull
    public UserNotificationTypeEnum getNotificationType() {
        return this.notificationType;
    }

    /**
     * Setter for <code>public.user_notification.notification_type</code>.
     */
    public UserNotificationPojo setNotificationType(@Nonnull UserNotificationTypeEnum notificationType) {
        this.notificationType = notificationType;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.notification_ref_id</code>.
     */
    @Nullable
    public UUID getNotificationRefId() {
        return this.notificationRefId;
    }

    /**
     * Setter for <code>public.user_notification.notification_ref_id</code>.
     */
    public UserNotificationPojo setNotificationRefId(@Nullable UUID notificationRefId) {
        this.notificationRefId = notificationRefId;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.read</code>.
     */
    @Nullable
    public Boolean getRead() {
        return this.read;
    }

    /**
     * Setter for <code>public.user_notification.read</code>.
     */
    public UserNotificationPojo setRead(@Nullable Boolean read) {
        this.read = read;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.created_on</code>.
     */
    @Nullable
    public OffsetDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>public.user_notification.created_on</code>.
     */
    public UserNotificationPojo setCreatedOn(@Nullable OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.created_by</code>.
     */
    @Nullable
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>public.user_notification.created_by</code>.
     */
    public UserNotificationPojo setCreatedBy(@Nullable String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.updated_on</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>public.user_notification.updated_on</code>.
     */
    public UserNotificationPojo setUpdatedOn(@Nullable OffsetDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }

    /**
     * Getter for <code>public.user_notification.updated_by</code>.
     */
    @Nullable
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>public.user_notification.updated_by</code>.
     */
    public UserNotificationPojo setUpdatedBy(@Nullable String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserNotificationPojo (");

        sb.append(id);
        sb.append(", ").append(ownerUserId);
        sb.append(", ").append(notificationType);
        sb.append(", ").append(notificationRefId);
        sb.append(", ").append(read);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedOn);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}
