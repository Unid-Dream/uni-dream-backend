/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentProfileQuestionnaireAnswerMapTable;
import unid.jooqMono.model.tables.pojos.StudentProfileQuestionnaireAnswerMapPojo;
import unid.jooqMono.model.tables.records.StudentProfileQuestionnaireAnswerMapRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentProfileQuestionnaireAnswerMapDao extends DAOImpl<StudentProfileQuestionnaireAnswerMapRecord, StudentProfileQuestionnaireAnswerMapPojo, UUID> {

    /**
     * Create a new StudentProfileQuestionnaireAnswerMapDao without any
     * configuration
     */
    public StudentProfileQuestionnaireAnswerMapDao() {
        super(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP, StudentProfileQuestionnaireAnswerMapPojo.class);
    }

    /**
     * Create a new StudentProfileQuestionnaireAnswerMapDao with an attached
     * configuration
     */
    public StudentProfileQuestionnaireAnswerMapDao(Configuration configuration) {
        super(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP, StudentProfileQuestionnaireAnswerMapPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentProfileQuestionnaireAnswerMapPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchById(UUID... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentProfileQuestionnaireAnswerMapPojo fetchOneById(UUID value) {
        return fetchOne(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.ID, value);
    }

    /**
     * Fetch records that have <code>student_profile_questionnaire_map_id
     * BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfStudentProfileQuestionnaireMapId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.STUDENT_PROFILE_QUESTIONNAIRE_MAP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_profile_questionnaire_map_id IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByStudentProfileQuestionnaireMapId(UUID... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.STUDENT_PROFILE_QUESTIONNAIRE_MAP_ID, values);
    }

    /**
     * Fetch records that have <code>questionnaire_question_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfQuestionnaireQuestionId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_QUESTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>questionnaire_question_id IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByQuestionnaireQuestionId(UUID... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_QUESTION_ID, values);
    }

    /**
     * Fetch records that have <code>questionnaire_answer_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfQuestionnaireAnswerId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_ANSWER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>questionnaire_answer_id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByQuestionnaireAnswerId(UUID... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_ANSWER_ID, values);
    }

    /**
     * Fetch records that have <code>questionnaire_answer_order BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfQuestionnaireAnswerOrder(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_ANSWER_ORDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>questionnaire_answer_order IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByQuestionnaireAnswerOrder(Integer... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_ANSWER_ORDER, values);
    }

    /**
     * Fetch records that have <code>questionnaire_answer_any_input BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfQuestionnaireAnswerAnyInput(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_ANSWER_ANY_INPUT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>questionnaire_answer_any_input IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByQuestionnaireAnswerAnyInput(String... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.QUESTIONNAIRE_ANSWER_ANY_INPUT, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByCreatedBy(String... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileQuestionnaireAnswerMapPojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentProfileQuestionnaireAnswerMapTable.STUDENT_PROFILE_QUESTIONNAIRE_ANSWER_MAP.UPDATED_BY, values);
    }
}
