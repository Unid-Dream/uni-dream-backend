/*
 * This file is generated by jOOQ.
 */
package unid.jooqMono.model.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import unid.jooqMono.model.tables.StudentProfileSchoolReportTable;
import unid.jooqMono.model.tables.pojos.StudentProfileSchoolReportPojo;
import unid.jooqMono.model.tables.records.StudentProfileSchoolReportRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentProfileSchoolReportDao extends DAOImpl<StudentProfileSchoolReportRecord, StudentProfileSchoolReportPojo, UUID> {

    /**
     * Create a new StudentProfileSchoolReportDao without any configuration
     */
    public StudentProfileSchoolReportDao() {
        super(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT, StudentProfileSchoolReportPojo.class);
    }

    /**
     * Create a new StudentProfileSchoolReportDao with an attached configuration
     */
    public StudentProfileSchoolReportDao(Configuration configuration) {
        super(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT, StudentProfileSchoolReportPojo.class, configuration);
    }

    @Override
    @Nonnull
    public UUID getId(StudentProfileSchoolReportPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchById(UUID... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public StudentProfileSchoolReportPojo fetchOneById(UUID value) {
        return fetchOne(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.ID, value);
    }

    /**
     * Fetch records that have <code>student_profile_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfStudentProfileId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.STUDENT_PROFILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_profile_id IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchByStudentProfileId(UUID... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.STUDENT_PROFILE_ID, values);
    }

    /**
     * Fetch records that have <code>secondary_school_report BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfSecondarySchoolReport(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.SECONDARY_SCHOOL_REPORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secondary_school_report IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchBySecondarySchoolReport(String... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.SECONDARY_SCHOOL_REPORT, values);
    }

    /**
     * Fetch records that have <code>secondary_school_report_academic_year
     * BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfSecondarySchoolReportAcademicYear(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.SECONDARY_SCHOOL_REPORT_ACADEMIC_YEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secondary_school_report_academic_year IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchBySecondarySchoolReportAcademicYear(String... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.SECONDARY_SCHOOL_REPORT_ACADEMIC_YEAR, values);
    }

    /**
     * Fetch records that have <code>secondary_school_report_semester BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfSecondarySchoolReportSemester(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.SECONDARY_SCHOOL_REPORT_SEMESTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secondary_school_report_semester IN
     * (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchBySecondarySchoolReportSemester(String... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.SECONDARY_SCHOOL_REPORT_SEMESTER, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfCreatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchByCreatedOn(OffsetDateTime... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchByCreatedBy(String... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfUpdatedOn(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchByUpdatedOn(OffsetDateTime... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    @Nonnull
    public List<StudentProfileSchoolReportPojo> fetchByUpdatedBy(String... values) {
        return fetch(StudentProfileSchoolReportTable.STUDENT_PROFILE_SCHOOL_REPORT.UPDATED_BY, values);
    }
}
